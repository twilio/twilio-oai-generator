


        private static Request BuildReadRequest(Read{{resourceName}}Options options, ITwilioRestClient client)
        {
            {{>resource/GeneratePath}}

            return new Request(
                HttpMethod.Get,
                Rest.Domain.{{domainPackage}},
                path,
                queryParams: options.GetParams(),
                headerParams: null
            );
        }

        public static ResourceSet<{{resourceName}}{{resourceConstant}}> Read(Read{{resourceName}}Options options, ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = client.Request(BuildReadRequest(options, client));
            var page = Page<{{resourceName}}{{resourceConstant}}>.FromJson("{{recordKey}}", response.Content);
            return new ResourceSet<{{resourceName}}{{resourceConstant}}>(page, options, client);
        }

        #if !NET35
        public static async System.Threading.Tasks.Task<ResourceSet<{{resourceName}}{{resourceConstant}}>> ReadAsync(Read{{resourceName}}Options options,
                                                                                             ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = await client.RequestAsync(BuildReadRequest(options, client));

            var page = Page<{{resourceName}}{{resourceConstant}}>.FromJson("{{recordKey}}", response.Content);
            return new ResourceSet<{{resourceName}}{{resourceConstant}}>(page, options, client);
        }
        #endif