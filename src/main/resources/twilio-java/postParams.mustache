    private void addPostParams(final {{vendorExtensions.x-auth-attributes.x-http-class-prefix}}Request request) {
{{#formParams}}
        if ({{paramName}} != null) {
    {{#isFreeFormObject}}
        {{#isArray}}
            for (Map<String, Object> prop : {{paramName}}) {
                request.addPostParam("{{baseName}}", Converter.mapToJson(prop));
            }
        {{/isArray}}
        {{^isArray}}
            request.addPostParam("{{baseName}}",  Converter.mapToJson({{paramName}}));
        {{/isArray}}
    {{/isFreeFormObject}}
    {{^isFreeFormObject}}
    {{#isArray}}
        {{#isEnum}}
            for ({{baseType}} prop : {{paramName}}) {
                request.addPostParam("{{{baseName}}}", prop.toString());
            }
        {{/isEnum}}
        {{^isEnum}}
        {{#vendorExtensions.x-is-string-array}}
            for ({{baseType}} prop : {{paramName}}) {
                request.addPostParam("{{baseName}}", prop);
            }
        {{/vendorExtensions.x-is-string-array}}
        {{^vendorExtensions.x-is-string-array}}
            for ({{baseType}} prop : {{paramName}}) {
                request.addPostParam("{{baseName}}", prop.toString());
            }
        {{/vendorExtensions.x-is-string-array}}
        {{/isEnum}}
    {{/isArray}}
    {{^isArray}}
    {{#vendorExtensions.x-is-other-data-type}}
            request.addPostParam("{{{baseName}}}", {{paramName}}.toString());
    {{/vendorExtensions.x-is-other-data-type}}
    {{^vendorExtensions.x-is-other-data-type}}
    {{#isString}}
            request.addPostParam("{{baseName}}", {{paramName}});
    {{/isString}}
    {{/vendorExtensions.x-is-other-data-type}}
    {{/isArray}}
    {{/isFreeFormObject}}
    {{>dateParams}}
        }
{{/formParams}}
    }