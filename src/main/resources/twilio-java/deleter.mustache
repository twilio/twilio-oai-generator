{{>licenseInfo}}
{{#resources}}
package com.twilio.rest.{{domainPackage}}.{{package}}{{packageSubPart}};

import com.twilio.base.Deleter;
import com.twilio.exception.ApiConnectionException;
import com.twilio.exception.ApiException;
import com.twilio.exception.RestException;
import com.twilio.http.HttpMethod;
import com.twilio.http.Request;
import com.twilio.http.Response;
import com.twilio.http.TwilioRestClient;
import com.twilio.rest.Domains;
import java.time.LocalDate;
import java.io.IOException;
import java.io.InputStream;
import java.net.URI;
import java.time.ZonedDateTime;

{{^fullJavaUtil}}
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
{{/fullJavaUtil}}

import lombok.ToString;


{{>model}}
{{#hasDelete}}
{{#operations}}
{{#vendorExtensions.x-is-delete-operation}}
public class {{resourceName}}Deleter extends Deleter<{{resourceName}}> {
{{#allParams}}
    private {{{dataType}}} {{paramName}};
{{/allParams}}

    public {{resourceName}}Deleter({{#requiredParams}}final {{{dataType}}} {{paramName}}{{^-last}}, {{/-last}}{{/requiredParams}}){
    {{#requiredParams}}
        this.{{paramName}} = {{paramName}};
    {{/requiredParams}}
    }

    @Override
    public boolean delete(final TwilioRestClient client) {
        String path = "{{{path}}}";
        {{#requiredParams}}
        path = path.replace("{"+"{{paramName}}"+"}", this.{{paramName}}.toString());
        {{/requiredParams}}

        Request request = new Request(
            HttpMethod.DELETE,
            Domains.{{#lambda.uppercase}}{{domain}}{{/lambda.uppercase}}.toString(),
            path
        );

        Response response = client.request(request);

        if (response == null) {
            throw new ApiConnectionException("{{resourceName}} delete failed: Unable to connect to server");
        } else if (!TwilioRestClient.SUCCESS.test(response.getStatusCode())) {
            RestException restException = RestException.fromJson(response.getStream(), client.getObjectMapper());
            if (restException == null) {
                throw new ApiException("Server Error, no content");
            }
            throw new ApiException(restException);
        }
        return response.getStatusCode() == 204;
    }
}
{{/vendorExtensions.x-is-delete-operation}}
{{/operations}}
{{/hasDelete}}
{{/resources}}

