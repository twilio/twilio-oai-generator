{{>licenseInfo}}
{{#resources}}
package com.twilio.rest.{{domainPackage}}.{{apiVersion}}{{namespaceSubPart}};

import com.twilio.converter.Promoter;
import com.twilio.exception.ApiConnectionException;
import com.twilio.converter.PrefixedCollapsibleMap;
import com.twilio.exception.ApiException;
import com.twilio.converter.Converter;
import com.twilio.exception.RestException;
import com.twilio.http.HttpMethod;
import com.twilio.http.Response;
import com.twilio.rest.Domains;
import java.time.LocalDate;
import java.io.IOException;
import java.io.InputStream;
import java.math.BigDecimal;
import java.net.URI;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;
import com.twilio.converter.DateConverter;

{{^fullJavaUtil}}
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
{{/fullJavaUtil}}

import lombok.ToString;

{{#apiOperations}}
{{#vendorExtensions.x-is-delete-operation}}
import com.twilio.base{{vendorExtensions.x-auth-import-class}}.Deleter;
import com.twilio.http{{vendorExtensions.x-auth-import-class}}.{{vendorExtensions.x-http-class-prefix}}Request;
import com.twilio.http{{vendorExtensions.x-auth-import-class}}.{{vendorExtensions.x-http-class-prefix}}TwilioRestClient;

public class {{apiName}}Deleter extends Deleter<{{apiName}}> {
{{#allParams}}
    private {{{dataType}}} {{paramName}};
{{/allParams}}

{{#vendorExtensions.x-signature-list}}
    public {{apiName}}Deleter({{#.}}final {{{dataType}}} {{paramName}}{{^-last}}, {{/-last}}{{/.}}){
    {{#.}}
        this.{{paramName}} = {{paramName}};
    {{/.}}
    }
{{/vendorExtensions.x-signature-list}}

{{#vendorExtensions.x-non-path-params}}
    public {{apiName}}Deleter set{{#lambda.titlecase}}{{paramName}}{{/lambda.titlecase}}(final {{{dataType}}} {{paramName}}){
        this.{{paramName}} = {{paramName}};
        return this;
    }
{{#isArray}}
    public {{apiName}}Deleter set{{#lambda.titlecase}}{{paramName}}{{/lambda.titlecase}}(final {{{baseType}}} {{paramName}}){
        return set{{#lambda.titlecase}}{{paramName}}{{/lambda.titlecase}}(Promoter.listOfOne({{paramName}}));
    }
{{/isArray}}
{{#vendorExtensions.x-promotions}}
{{#entrySet}}

    public {{apiName}}Deleter set{{#lambda.titlecase}}{{paramName}}{{/lambda.titlecase}}(final {{#lambda.titlecase}}{{key}}{{/lambda.titlecase}} {{paramName}}){
        return set{{#lambda.titlecase}}{{paramName}}{{/lambda.titlecase}}({{value}});
    }
{{/entrySet}}
{{/vendorExtensions.x-promotions}}
{{/vendorExtensions.x-non-path-params}}

    @Override
    public boolean delete(final {{vendorExtensions.x-http-class-prefix}}TwilioRestClient client) {
{{>generate_uri}}
        {{vendorExtensions.x-http-class-prefix}}Request request = new {{vendorExtensions.x-http-class-prefix}}Request(
            HttpMethod.DELETE,
            Domains.{{#lambda.uppercase}}{{domainName}}{{/lambda.uppercase}}.toString(),
            path
        );
        {{#queryParams.0}}
        addQueryParams(request);
        {{/queryParams.0}}
        {{#formParams.0}}
        addPostParams(request);
        {{/formParams.0}}
        {{#headerParams.0}}
        addHeaderParams(request);
        {{/headerParams.0}}
        Response response = client.request(request);

        if (response == null) {
            throw new ApiConnectionException("{{apiName}} delete failed: Unable to connect to server");
        } else if (!{{vendorExtensions.x-http-class-prefix}}TwilioRestClient.SUCCESS.test(response.getStatusCode())) {
            RestException restException = RestException.fromJson(response.getStream(), client.getObjectMapper());
            if (restException == null) {
                throw new ApiException("Server Error, no content", response.getStatusCode());
            }
            throw new ApiException(restException);
        }
        return response.getStatusCode() == 204;
    }
{{#formParams.0}}
{{>postParams}}
{{/formParams.0}}
{{#headerParams.0}}
    private void addHeaderParams(final {{vendorExtensions.x-http-class-prefix}}Request request) {
{{>headerParams}}
{{/headerParams.0}}
{{#queryParams.0}}
    private void addQueryParams(final {{vendorExtensions.x-http-class-prefix}}Request request) {
{{>queryParams}}    }
{{/queryParams.0}}
}
{{/vendorExtensions.x-is-delete-operation}}
{{/apiOperations}}
{{/resources}}
