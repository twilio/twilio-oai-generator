

    {{#resources.nestedModels}}
        @ToString
        static public class {{classname}} {
            {{#allVars}}
                @JsonProperty("{{#lambda.lowercase}}{{{nameInSnakeCase}}}{{/lambda.lowercase}}")
                @Getter @Setter private {{{dataType}}} {{name}};
            {{/allVars}}

            {{#modelParameters}}
            public {{classname}}({{#.}}final {{{dataType}}} {{name}}{{^-last}}, {{/-last}}{{/.}} ) {
                {{#.}}
                this.{{name}} = {{name}};
                {{/.}}
            }
            {{/modelParameters}}

            {{^vendorExtensions.x-response}}
            public static {{classname}} fromJson(String jsonString, ObjectMapper mapper) throws IOException {
                return mapper.readValue(jsonString, {{classname}}.class);
            }
            {{/vendorExtensions.x-response}}
        }

    {{/resources.nestedModels}}

