{{>licenseInfo}}
{{#resources}}
package com.twilio.rest.{{domainPackage}}.{{apiVersion}}{{namespaceSubPart}};


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

import com.twilio.exception.ApiException;
import com.twilio.exception.RestException;
import com.twilio.http.HttpMethod;
import com.twilio.http.Request;
import com.twilio.http.Response;
import com.twilio.http.TwilioRestClient;
import com.twilio.rest.Domains;

import lombok.Getter;
import lombok.ToString;

import java.io.IOException;
import java.io.InputStream;
import java.net.URI;
import java.time.ZonedDateTime;

import java.util.Map;
import java.util.List;
import java.time.LocalDate;
import java.math.BigDecimal;
import com.twilio.type.PhoneNumberCapabilities;
import com.twilio.type.FeedbackIssue;
import com.twilio.type.IceServer;
import com.twilio.type.InboundCallPrice;
import com.twilio.type.OutboundPrefixPriceWithOrigin;
import com.twilio.type.OutboundPrefixPrice;
import com.twilio.type.OutboundCallPriceWithOrigin;
import com.twilio.type.PhoneNumberPrice;
import com.twilio.type.InboundSmsPrice;
import com.twilio.type.OutboundSmsPrice;
import com.twilio.type.OutboundCallPrice;
import com.twilio.type.RecordingRule;
import com.twilio.type.SubscribeRule;
import com.google.gson.Gson;

public class {{apiName}}Model  {

    {{#resources.nestedModels}}
        @JsonIgnoreProperties(ignoreUnknown = true)
        @ToString
        static public class {{classname}} {
            {{#allVars}}
            @Getter private {{{dataType}}} {{name}};
            {{/allVars}}

            {{#vendorExtensions.x-response}}
            public String toJson() {
                return new Gson().toJson(this);
            }
            {{/vendorExtensions.x-response}}
            {{^vendorExtensions.x-response}}
            public static {{classname}} fromJson(String jsonString) throws IOException {
                ObjectMapper mapper = new ObjectMapper();
                return mapper.readValue(jsonString, {{classsName}}.class);
            }
            {{/vendorExtensions.x-response}}
        }

    {{/resources.nestedModels}}
}
{{/resources}}
