{{>licenseInfo}}

from twilio.base import deserialize
from twilio.base import serialize
from twilio.base import values
from twilio.base.instance_context import InstanceContext
from twilio.base.instance_resource import InstanceResource
from twilio.base.list_resource import ListResource
{{#hasPaginationOperation}}
from twilio.base.page import Page
{{/hasPaginationOperation}}
# TODO: needs dependent imports

{{#resources}}

class {{resourceName}}(ListResource):
    def __init__(self, version: {{apiVersionClass}}{{#resourcePathParams}}, {{paramName}}: {{{dataType}}}{{/resourcePathParams}}):
        # TODO: needs autogenerated docs
        super({{resourceName}}, self).__init__(version)

        # Path Solution
        self._solution = { {{#resourcePathParams}}{{paramName}}, {{/resourcePathParams}} }
        self._uri = '{{path}}'

        # Components
        {{#dependents}}
        self._{{mountName}} = None
        {{/dependents}}

    def __repr__(self):
        """
        Provide a friendly representation
        :returns: Machine friendly representation
        :rtype: str
        """
    context = ' '.join('{}={}'.format(k, v) for k, v in self._solution.items())
    return '<Twilio.Api.{{apiVersionClass}}.{{resourceName}} {}>'.format(context)

{{/resources}}
