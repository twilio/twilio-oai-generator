{{>licenseInfo}}

from twilio.base import deserialize
from twilio.base import serialize
from twilio.base import values
from twilio.base.instance_context import InstanceContext
from twilio.base.instance_resource import InstanceResource
from twilio.base.list_resource import ListResource
{{#hasPaginationOperation}}
from twilio.base.page import Page
{{/hasPaginationOperation}}
# TODO: needs dependent imports

{{#resources}}

class {{resourceName}}({{#isListResource}}ListResource{{/isListResource}}{{#isContextResource}}InstanceContext{{/isContextResource}}{{#isPageResource}}Page{{/isPageResource}}{{#isInstanceResource}}InstanceResource{{/isInstanceResource}}):
    def __init__(self, version: {{apiVersionClass}}{{#resourcePathParams}}, {{paramName}}: {{{dataType}}}{{/resourcePathParams}}):
        # TODO: needs autogenerated docs
        super({{resourceName}}List, self).__init__(version)

        # Path Solution
        self._solution = { {{#resourcePathParams}}{{paramName}}, {{/resourcePathParams}} }
        self._uri = '{{path}}'
        {{#dependents}}
        self._{{mountName}} = None{{/dependents}}
        {{#operations}}
        def {{vendorExtensions.x-name-lower}}(self{{#allParams}}, {{paramName}}{{/allParams}}):
            data = values.of({
                {{#allParams}}'{{paramName}}': {{paramName}},{{/allParams}}
            })

            return data
        {{/operations}}

{{/resources}}