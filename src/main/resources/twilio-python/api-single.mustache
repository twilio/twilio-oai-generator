{{>licenseInfo}}
{{#resources}}
from twilio.base import deserialize
from twilio.base import serialize
from twilio.base import values
{{#instancePath}}from twilio.base.instance_context import InstanceContext{{/instancePath}}
{{#responseModel}}from twilio.base.instance_resource import InstanceResource{{/responseModel}}
from twilio.base.list_resource import ListResource
from twilio.base.version import Version
{{#hasPaginationOperation}}from twilio.base.page import Page{{/hasPaginationOperation}}
{{#dependents}}from twilio.rest.{{domainPackage}}.{{apiVersion}}.{{namespaceSubPart}}.{{filename}} import {{resourceName}}List
{{/dependents}}

class {{apiName}}List(ListResource):

    def __init__(self, version: Version{{#listPathParams}}, {{paramName}}: {{{dataType}}}{{/listPathParams}}):
        """
        Initialize the {{apiName}}List

        :param Version version: Version that contains the resource
        {{#listPathParams}}:param {{paramName}}: {{{description}}}
        {{/listPathParams}}
        :returns: twilio.rest.{{domainPackage}}.{{apiVersion}}.{{namespaceSubPart}}.{{apiName}}List
        :rtype: twilio.rest.{{domainPackage}}.{{apiVersion}}.{{namespaceSubPart}}.{{apiName}}List
        """
        super().__init__(version)

        # Path Solution
        self._solution = { {{#listPathParams}}'{{paramName}}': {{paramName}}, {{/listPathParams}} }
        {{#listPath}}self._uri = '{{listPath}}'.format(**self._solution){{/listPath}}
        {{#dependents}}{{^instanceDependent}}
        self._{{mountName}} = None{{/instanceDependent}}{{/dependents}}
        {{>listOperations}}{{#dependents}}{{^instanceDependent}}
    @property
    def {{mountName}}(self):
        """
        Access the {{mountName}}

        :returns: twilio.rest.{{domainPackage}}.{{apiVersion}}.{{namespaceSubPart}}.{{resourceName}}List
        :rtype: twilio.rest.{{domainPackage}}.{{apiVersion}}.{{namespaceSubPart}}.{{resourceName}}List
        """
        if self._{{mountName}} is None:
            self._{{mountName}} = {{resourceName}}List(self._version{{#listPathParams}}, {{paramName}}=self._solution['{{paramName}}']{{/listPathParams}})
        return self._{{mountName}}
{{/instanceDependent}}{{/dependents}}
{{#instancePath}}{{>contextMethods}}{{/instancePath}}
    def __repr__(self):
        """
        Provide a friendly representation
        :returns: Machine friendly representation
        :rtype: str
        """
        return '<Twilio.{{domainName}}.{{apiVersionClass}}.{{apiName}}List>'
{{#hasPaginationOperation}}{{>pagination}}{{/hasPaginationOperation}}
{{#instancePath}}{{>context}}{{/instancePath}}
{{#responseModel}}{{>instance}}{{/responseModel}}
{{/resources}}
