  /**
   * Streams {{instanceName}} records from the API.
   *
   * This operation lazily loads records as efficiently as possible until the limit
   * is reached.
   *
   * The results are passed into the callback function, so this operation is memory
   * efficient.
   *
   * If a function is passed as the first argument, it will be used as the callback
   * function.
   *
   * @param { {{vendorExtensions.x-resource-name}}EachOptions } [params] - Options for request
   * @param { function } [callback] - Function to process each record
   */
  each(params?: {{vendorExtensions.x-resource-name}}EachOptions | ((item: {{instanceName}}, done: (err?: Error) => void) => void), callback?: (item: {{instanceName}}, done: (err?: Error) => void) => void): void;
  /**
   * Retrieve a single target page of {{instanceName}} records from the API.
   *
   * The request is executed immediately.
   *
   * @param { string } [targetUrl] - API-generated URL for the requested results page
   * @param { function } [callback] - Callback to handle list of records
   */
  getPage(targetUrl: string, callback?: (error: Error | null, items: {{returnType}}) => any): Promise<{{returnType}}>;
  /**
   * Lists {{instanceName}} records from the API as a list.
   *
   * If a function is passed as the first argument, it will be used as the callback
   * function.
   *
   * @param { {{vendorExtensions.x-resource-name}}Options } [params] - Options for request
   * @param { function } [callback] - Callback to handle list of records
   */
  list(params?: {{vendorExtensions.x-resource-name}}Options | ((error: Error | null, items: {{instanceName}}[]) => any), callback?: (error: Error | null, items: {{instanceName}}[]) => any): Promise<{{instanceName}}[]>;
  /**
   * Retrieve a single page of {{instanceName}} records from the API.
   *
   * The request is executed immediately.
   *
   * If a function is passed as the first argument, it will be used as the callback
   * function.
   *
   * @param { {{vendorExtensions.x-resource-name}}PageOptions } [params] - Options for request
   * @param { function } [callback] - Callback to handle list of records
   */
  page(params?: {{vendorExtensions.x-resource-name}}PageOptions | ((error: Error | null, items: {{returnType}}) => any), callback?: (error: Error | null, items: {{returnType}}) => any): Promise<{{returnType}}>;
