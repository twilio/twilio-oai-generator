{{>partial_header}}
package {{packageName}}

import (
    "context"
    "github.com/hashicorp/terraform-plugin-sdk/v2/diag"
    "github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
    "github.com/twilio/terraform-provider-twilio/client"
    . "github.com/twilio/terraform-provider-twilio/twilio/common"
    . "github.com/twilio/twilio-go/{{clientPath}}"
)

{{#resources}}
{{#hasAllCrudOps}}
func Resource{{name}}() *schema.Resource {
    return &schema.Resource{
        CreateContext: create{{name}},
        ReadContext: read{{name}},
        UpdateContext: update{{name}},
        DeleteContext: delete{{name}},
        Schema: map[string]*schema.Schema{
            {{#schema}}
            "{{{vendorExtensions.x-name-in-snake-case}}}": {{{vendorExtensions.x-terraform-schema-type}}},
            {{/schema}}
            {{#responseSchema}}
            "{{{vendorExtensions.x-name-in-snake-case}}}": {{{vendorExtensions.x-terraform-schema-type}}},
            {{/responseSchema}}
        },
    }
}

{{#operations}}
{{#operation}}
func {{#vendorExtensions.x-is-create-operation}}create{{/vendorExtensions.x-is-create-operation}}{{#vendorExtensions.x-is-read-operation}}read{{/vendorExtensions.x-is-read-operation}}{{#vendorExtensions.x-is-update-operation}}update{{/vendorExtensions.x-is-update-operation}}{{#vendorExtensions.x-is-delete-operation}}delete{{/vendorExtensions.x-is-delete-operation}}{{name}}(ctx context.Context, d *schema.ResourceData, m interface{}) diag.Diagnostics {
    {{#vendorExtensions.x-has-optional-params}}
    params := {{nickname}}Params{}
    if err := UnmarshalSchema(&params, d); err != nil {
        return diag.FromErr(err)
    }
    {{/vendorExtensions.x-has-optional-params}}

    {{#allParams}}
    {{#isPathParam}}
    {{#required}}
    {{#lambda.camelcase}}{{paramName}}{{/lambda.camelcase}} := d.Get("{{vendorExtensions.x-name-in-snake-case}}").({{dataType}})
    {{/required}}
    {{/isPathParam}}
    {{/allParams}}

    {{#vendorExtensions.x-is-create-operation}}
    r, err := m.(*client.Config).Client.{{productVersion}}.{{nickname}}({{#requiredParams}}{{#lambda.camelcase}}{{paramName}}{{/lambda.camelcase}}{{^-last}}, {{/-last}}{{/requiredParams}}{{#vendorExtensions.x-has-optional-params}}{{#hasRequiredParams}}, {{/hasRequiredParams}}&params{{/vendorExtensions.x-has-optional-params}});
    if err != nil {
        return diag.FromErr(err)
    }

    d.SetId(*r.{{vendorExtensions.x-sid-key}})
    err = MarshalSchema(d, r)
    {{/vendorExtensions.x-is-create-operation}}
    {{#vendorExtensions.x-is-read-operation}}
        r, err := m.(*client.Config).Client.{{productVersion}}.{{nickname}}({{#requiredParams}}{{#lambda.camelcase}}{{paramName}}{{/lambda.camelcase}}{{^-last}}, {{/-last}}{{/requiredParams}}{{#vendorExtensions.x-has-optional-params}}{{#hasRequiredParams}}, {{/hasRequiredParams}}&params{{/vendorExtensions.x-has-optional-params}})
        if err != nil {
            return diag.FromErr(err)
        }

        err = MarshalSchema(d, r)
    {{/vendorExtensions.x-is-read-operation}}
    {{#vendorExtensions.x-is-update-operation}}
        r, err := m.(*client.Config).Client.{{productVersion}}.{{nickname}}({{#requiredParams}}{{#lambda.camelcase}}{{paramName}}{{/lambda.camelcase}}{{^-last}}, {{/-last}}{{/requiredParams}}{{#vendorExtensions.x-has-optional-params}}{{#hasRequiredParams}}, {{/hasRequiredParams}}&params{{/vendorExtensions.x-has-optional-params}})
        if err != nil {
            return diag.FromErr(err)
        }

        err = MarshalSchema(d, r)
    {{/vendorExtensions.x-is-update-operation}}

    {{#vendorExtensions.x-is-delete-operation}}
        err := m.(*client.Config).Client.{{productVersion}}.{{nickname}}({{#requiredParams}}{{#lambda.camelcase}}{{paramName}}{{/lambda.camelcase}}{{^-last}}, {{/-last}}{{/requiredParams}}{{#vendorExtensions.x-has-optional-params}}{{#hasRequiredParams}}, {{/hasRequiredParams}}&params{{/vendorExtensions.x-has-optional-params}})
        d.SetId("")
    {{/vendorExtensions.x-is-delete-operation}}


    if err != nil {
        return diag.FromErr(err)
    }
    return nil
}

{{/operation}}
{{/operations}}
{{/hasAllCrudOps}}
{{/resources}}
