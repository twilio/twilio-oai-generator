                class {{apiName}}Instance < InstanceResource
                    ##
                    # Initialize the {{apiName}}Instance
                    # @param [Version] version Version that contains the resource
                    # @param [Hash] payload payload that contains response from Twilio
                    # @param [String] account_sid The SID of the
                    #   {Account}[https://www.twilio.com/docs/iam/api/account] that created this {{apiName}}
                    #   resource.
                    # @param [String] sid The SID of the Call resource to fetch.
                    # @return [{{apiName}}Instance] {{apiName}}Instance
                    def initialize(version{{#responseModel}}{{#hasVars}}, payload{{/hasVars}}{{/responseModel}} {{#requiredPathParams}}, {{paramName}}: nil{{/requiredPathParams}})
                        super(version)
                        {{#responseModel}}{{#hasVars}}
                        # Marshaled Properties
                        @properties = { {{/hasVars}}{{/responseModel}}{{#responseModel}}{{#vars}}
                            '{{name}}' => {{{vendorExtensions.instance-property}}},{{/vars}}{{/responseModel}}{{#responseModel}}{{#hasVars}}
                        }{{/hasVars}}{{/responseModel}}
                        {{#metaProperties.x-is-context-operation}}

                        # Context
                        @instance_context = nil
                        @params = { {{#requiredPathParams}}'{{paramName}}' => {{paramName}} {{#vendorExtensions.isInstanceParam}} || @properties['{{paramName}}'] {{/vendorExtensions.isInstanceParam}} ,{{/requiredPathParams}} }
                        {{/metaProperties.x-is-context-operation}}
                    end

                    {{#metaProperties.x-is-context-operation}}
                    ##
                    # Generate an instance context for the instance, the context is capable of
                    # performing various actions.  All instance actions are proxied to the context
                    # @return [{{apiName}}Context] CallContext for this CallInstance
                    def context
                        unless @instance_context
                            @instance_context = {{apiName}}Context.new(@version {{#requiredPathParams}}, @params['{{paramName}}']{{/requiredPathParams}})
                        end
                        @instance_context
                    end
                    {{/metaProperties.x-is-context-operation}}
                    {{#responseModel}}{{#vars}}
                    ##
                    # @return [{{{dataType}}}] {{{description}}}
                    def {{name}}
                        @properties['{{name}}']
                    end
                    {{/vars}}{{/responseModel}}
                    {{#apiOperations}}
{{#vendorExtensions.instanceOperation}}{{>methods}}
                        context.{{#lambda.camelcase}}{{vendorExtensions.x-name}}{{/lambda.camelcase}}{{#hasParams}}({{#queryParams}}
                            {{paramName}}: {{paramName}}, {{/queryParams}}{{#formParams}}
                            {{paramName}}: {{paramName}}, {{/formParams}}{{#headerParams}}
                            {{paramName}}: {{paramName}}, {{/headerParams}}
                        ){{/hasParams}}
                    end

{{/vendorExtensions.instanceOperation}}
                {{/apiOperations}}
                    {{#metaProperties.contextImportProperties}}
                    ##
                    # Access the {{mountName}}
                    # @return [{{mountName}}] {{mountName}}
                    def {{mountName}}
                        context.{{mountName}}
                    end

                    {{/metaProperties.contextImportProperties}}
                    {{#metaProperties.contextImportMethods}}
                    ##
                    # Access the {{mountName}}
                    # @return [{{mountName}}] {{mountName}}
                    def {{mountName}}
                        context.{{mountName}}
                    end

                    {{/metaProperties.contextImportMethods}}
                    ##
                    # Provide a user friendly representation
                    def to_s
                        {{#metaProperties.x-is-context-operation}}
                        values = @params.map{|k, v| "#{k}: #{v}"}.join(" ")
                        {{/metaProperties.x-is-context-operation}}
                        "<Twilio.{{domainName}}.{{apiVersionClass}}.{{apiName}}Instance{{#metaProperties.x-is-context-operation}} #{values}{{/metaProperties.x-is-context-operation}}>"
                    end

                    ##
                    # Provide a detailed, user friendly representation
                    def inspect
                        {{#metaProperties.x-is-context-operation}}
                        values = @properties.map{|k, v| "#{k}: #{v}"}.join(" ")
                        {{/metaProperties.x-is-context-operation}}
                        "<Twilio.{{domainName}}.{{apiVersionClass}}.{{apiName}}Instance{{#metaProperties.x-is-context-operation}} #{values}{{/metaProperties.x-is-context-operation}}>"
                    end
                end
