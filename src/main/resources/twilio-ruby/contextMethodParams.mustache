                        {{#queryParams.0}}
                        params = Twilio::Values.of({
                        {{#queryParams}}
                        {{#required}}
                        {{^vendorExtensions.x-prefixed-collapsible-map}}
                        {{^vendorExtensions.x-serialize}}
                            '{{baseName}}' => {{paramName}},
                        {{/vendorExtensions.x-serialize}}
                        {{#vendorExtensions.x-serialize}}
                            {{^isArray}}
                            '{{baseName}}' => {{vendorExtensions.x-serialize}}({{paramName}}),
                            {{/isArray}}
                            {{#isArray}}
                            '{{baseName}}' => {{vendorExtensions.x-serialize}}({{paramName}}) { |e| {{^vendorExtensions.x-is-array-of-objects}}e{{/vendorExtensions.x-is-array-of-objects}}{{#vendorExtensions.x-is-array-of-objects}}{{.}}{{/vendorExtensions.x-is-array-of-objects}} },
                            {{/isArray}}
                        {{/vendorExtensions.x-serialize}}
                        {{/vendorExtensions.x-prefixed-collapsible-map}}
                        {{/required}}
                        {{/queryParams}}
                        {{#queryParams}}
                        {{^required}}
                        {{^vendorExtensions.x-prefixed-collapsible-map}}
                        {{^vendorExtensions.x-serialize}}
                            '{{baseName}}' => {{paramName}},
                        {{/vendorExtensions.x-serialize}}
                        {{#vendorExtensions.x-serialize}}
                            {{^isArray}}
                            '{{baseName}}' => {{vendorExtensions.x-serialize}}({{paramName}}),
                            {{/isArray}}
                            {{#isArray}}
                            '{{baseName}}' => {{vendorExtensions.x-serialize}}({{paramName}}) { |e| {{^vendorExtensions.x-is-array-of-objects}}e{{/vendorExtensions.x-is-array-of-objects}}{{#vendorExtensions.x-is-array-of-objects}}{{.}}{{/vendorExtensions.x-is-array-of-objects}} },
                            {{/isArray}}
                        {{/vendorExtensions.x-serialize}}
                        {{/vendorExtensions.x-prefixed-collapsible-map}}
                        {{/required}}
                        {{/queryParams}}
                        })
                        {{#queryParams}}
                        {{#required}}
                        {{#vendorExtensions.x-prefixed-collapsible-map}}
                        params.merge!(Twilio.prefixed_collapsible_map({{paramName}}, 'AddOns'))
                        {{/vendorExtensions.x-prefixed-collapsible-map}}
                        {{/required}}
                        {{/queryParams}}
                        {{#queryParams}}
                        {{^required}}
                        {{#vendorExtensions.x-prefixed-collapsible-map}}
                        params.merge!(Twilio.prefixed_collapsible_map({{paramName}}, 'AddOns'))
                        {{/vendorExtensions.x-prefixed-collapsible-map}}
                        {{/required}}
                        {{/queryParams}}
                        {{/queryParams.0}}
                        {{#formParams.0}}
                        data = Twilio::Values.of({
                        {{#requiredParams}}
                        {{#isFormParam}}
                        {{^vendorExtensions.x-prefixed-collapsible-map}}
                        {{^vendorExtensions.x-serialize}}
                            '{{baseName}}' => {{paramName}},
                        {{/vendorExtensions.x-serialize}}
                        {{#vendorExtensions.x-serialize}}
                            {{^isArray}}
                            '{{baseName}}' => {{vendorExtensions.x-serialize}}({{paramName}}),
                            {{/isArray}}
                            {{#isArray}}
                            '{{baseName}}' => {{vendorExtensions.x-serialize}}({{paramName}}) { |e| {{^vendorExtensions.x-is-array-of-objects}}e{{/vendorExtensions.x-is-array-of-objects}}{{#vendorExtensions.x-is-array-of-objects}}{{.}}{{/vendorExtensions.x-is-array-of-objects}} },
                            {{/isArray}}
                        {{/vendorExtensions.x-serialize}}
                        {{/vendorExtensions.x-prefixed-collapsible-map}}
                        {{/isFormParam}}
                        {{/requiredParams}}
                        {{#optionalParams}}
                        {{#isFormParam}}
                        {{^vendorExtensions.x-prefixed-collapsible-map}}
                        {{^vendorExtensions.x-serialize}}
                            '{{baseName}}' => {{paramName}},
                        {{/vendorExtensions.x-serialize}}
                        {{#vendorExtensions.x-serialize}}
                            {{^isArray}}
                            '{{baseName}}' => {{vendorExtensions.x-serialize}}({{paramName}}),
                            {{/isArray}}
                            {{#isArray}}
                            '{{baseName}}' => {{vendorExtensions.x-serialize}}({{paramName}}) { |e| {{^vendorExtensions.x-is-array-of-objects}}e{{/vendorExtensions.x-is-array-of-objects}}{{#vendorExtensions.x-is-array-of-objects}}{{.}}{{/vendorExtensions.x-is-array-of-objects}} },
                            {{/isArray}}
                        {{/vendorExtensions.x-serialize}}
                        {{/vendorExtensions.x-prefixed-collapsible-map}}
                        {{/isFormParam}}
                        {{/optionalParams}}
                        })
                        {{#requiredParams}}
                        {{#isFormParam}}
                        {{#vendorExtensions.x-prefixed-collapsible-map}}
                        data.merge!(Twilio.prefixed_collapsible_map({{paramName}}, 'AddOns'))
                        {{/vendorExtensions.x-prefixed-collapsible-map}}
                        {{/isFormParam}}
                        {{/requiredParams}}
                        {{#optionalParams}}
                        {{#isFormParam}}
                        {{#vendorExtensions.x-prefixed-collapsible-map}}
                        data.merge!(Twilio.prefixed_collapsible_map({{paramName}}, 'AddOns'))
                        {{/vendorExtensions.x-prefixed-collapsible-map}}{{/isFormParam}}{{/optionalParams}}
                        {{/formParams.0}}
                        headers = Twilio::Values.of({'Content-Type' => 'application/x-www-form-urlencoded', {{#headerParams}}{{#required}}'{{baseName}}' => {{paramName}}, {{/required}}{{/headerParams}}{{#headerParams}}{{^required}}'{{baseName}}' => {{paramName}}, {{/required}}{{/headerParams}}})
                        {{^vendorExtensions.scimConsumes}}{{#bodyParams.0}}headers['Content-Type'] = 'application/json'{{/bodyParams.0}}{{/vendorExtensions.scimConsumes}}
                        {{#vendorExtensions.scimConsumes}}headers['Content-Type'] = 'application/scim+json'{{/vendorExtensions.scimConsumes}}
                        {{#vendorExtensions.x-is-delete-operation}}{{#vendorExtensions.scimProduces}}headers['Accept'] = '*/*'{{/vendorExtensions.scimProduces}}{{/vendorExtensions.x-is-delete-operation}}
                        {{^vendorExtensions.x-is-delete-operation}}
                        {{#vendorExtensions.scimProduces}}headers['Accept'] = 'application/scim+json'{{/vendorExtensions.scimProduces}}
                        {{#vendorExtensions.multipleProduces}} headers['Accept'] = '*/*'{{/vendorExtensions.multipleProduces}}
                        payload = @version.{{#lambda.camelcase}}{{vendorExtensions.x-name}}{{/lambda.camelcase}}('{{httpMethod}}', @uri{{#queryParams.0}}, params: params{{/queryParams.0}}{{#formParams.0}}, data: data{{/formParams.0}}, headers: headers{{#bodyParams.0}}, data: {{paramName}}.to_json{{/bodyParams.0}})
                        {{apiName}}Instance.new(
                            @version,
                            payload,{{#vendorExtensions.listOperation}}{{#listPathParams}}
                            {{paramName}}: @solution[:{{paramName}}],{{/listPathParams}}{{/vendorExtensions.listOperation}}{{#vendorExtensions.instanceOperation}}{{#instancePathParams}}
                            {{paramName}}: @solution[:{{paramName}}],{{/instancePathParams}}{{/vendorExtensions.instanceOperation}}
                        )
                        {{/vendorExtensions.x-is-delete-operation}}
                        {{#vendorExtensions.x-is-delete-operation}}
                        @version.{{#lambda.camelcase}}{{vendorExtensions.x-name}}{{/lambda.camelcase}}('{{httpMethod}}', @uri{{#queryParams.0}}, params: params{{/queryParams.0}}{{#formParams.0}}, data: data{{/formParams.0}}, headers: headers)
                        {{/vendorExtensions.x-is-delete-operation}}
                    end
