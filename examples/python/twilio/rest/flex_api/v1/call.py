r"""
    This code was generated by
   ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
    |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
    |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \

    Twilio - Accounts
    This is the public Twilio REST API.

    NOTE: This class is auto generated by OpenAPI Generator.
    https://openapi-generator.tech
    Do not edit the class manually.
"""


from typing import Optional
from twilio.base import deserialize, values
from twilio.base.instance_context import InstanceContext
from twilio.base.instance_resource import InstanceResource
from twilio.base.list_resource import ListResource
from twilio.base.version import Version


class CallInstance(InstanceResource):
    def __init__(self, version, payload, sid: Optional[str] = None):
        """
        Initialize the CallInstance

        :returns: twilio.rest.flex_api.v1.call.CallInstance
        :rtype: twilio.rest.flex_api.v1.call.CallInstance
        """
        super().__init__(version)

        self._properties = {
            "sid": deserialize.integer(payload.get("sid")),
        }

        self._solution = {
            "sid": sid or self._properties["sid"],
        }
        self._context: Optional[CallContext] = None

    @property
    def _proxy(self):
        """
        Generate an instance context for the instance, the context is capable of
        performing various actions. All instance actions are proxied to the context

        :returns: CallContext for this CallInstance
        :rtype: twilio.rest.flex_api.v1.call.CallContext
        """
        if self._context is None:
            self._context = CallContext(
                self._version,
                sid=self._solution["sid"],
            )
        return self._context

    @property
    def sid(self):
        """
        :returns: Non-string path parameter in the response.
        :rtype: int
        """
        return self._properties["sid"]

    def update(self):
        """
        Update the CallInstance


        :returns: The updated CallInstance
        :rtype: twilio.rest.flex_api.v1.call.CallInstance
        """
        return self._proxy.update()

    async def update_async(self):
        """
        Asynchronous coroutine to update the CallInstance


        :returns: The updated CallInstance
        :rtype: twilio.rest.flex_api.v1.call.CallInstance
        """
        return await self._proxy.update_async()

    def __repr__(self):
        """
        Provide a friendly representation

        :returns: Machine friendly representation
        :rtype: str
        """
        context = " ".join("{}={}".format(k, v) for k, v in self._solution.items())
        return "<Twilio.FlexApi.V1.CallInstance {}>".format(context)


class CallContext(InstanceContext):
    def __init__(self, version: Version, sid: str):
        """
        Initialize the CallContext

        :param Version version: Version that contains the resource
        :param sid:

        :returns: twilio.rest.flex_api.v1.call.CallContext
        :rtype: twilio.rest.flex_api.v1.call.CallContext
        """
        super().__init__(version)

        # Path Solution
        self._solution = {
            "sid": sid,
        }
        self._uri = "/Voice/{sid}".format(**self._solution)

    def update(self):
        """
        Update the CallInstance


        :returns: The updated CallInstance
        :rtype: twilio.rest.flex_api.v1.call.CallInstance
        """
        data = values.of({})

        payload = self._version.update(
            method="POST",
            uri=self._uri,
            data=data,
        )

        return CallInstance(self._version, payload, sid=self._solution["sid"])

    async def update_async(self):
        """
        Asynchronous coroutine to update the CallInstance


        :returns: The updated CallInstance
        :rtype: twilio.rest.flex_api.v1.call.CallInstance
        """
        data = values.of({})

        payload = await self._version.update_async(
            method="POST",
            uri=self._uri,
            data=data,
        )

        return CallInstance(self._version, payload, sid=self._solution["sid"])

    def __repr__(self):
        """
        Provide a friendly representation

        :returns: Machine friendly representation
        :rtype: str
        """
        context = " ".join("{}={}".format(k, v) for k, v in self._solution.items())
        return "<Twilio.FlexApi.V1.CallContext {}>".format(context)


class CallList(ListResource):
    def __init__(self, version: Version):
        """
        Initialize the CallList

        :param Version version: Version that contains the resource

        :returns: twilio.rest.flex_api.v1.call.CallList
        :rtype: twilio.rest.flex_api.v1.call.CallList
        """
        super().__init__(version)

    def get(self, sid):
        """
        Constructs a CallContext

        :param sid:

        :returns: twilio.rest.flex_api.v1.call.CallContext
        :rtype: twilio.rest.flex_api.v1.call.CallContext
        """
        return CallContext(self._version, sid=sid)

    def __call__(self, sid):
        """
        Constructs a CallContext

        :param sid:

        :returns: twilio.rest.flex_api.v1.call.CallContext
        :rtype: twilio.rest.flex_api.v1.call.CallContext
        """
        return CallContext(self._version, sid=sid)

    def __repr__(self):
        """
        Provide a friendly representation

        :returns: Machine friendly representation
        :rtype: str
        """
        return "<Twilio.FlexApi.V1.CallList>"
