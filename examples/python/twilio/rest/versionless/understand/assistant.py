"""
    This code was generated by
    ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
    |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
    |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \

    Twilio - Versionless
    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    NOTE: This class is auto generated by OpenAPI Generator.
    https://openapi-generator.tech
    Do not edit the class manually.
"""


from twilio.base import deserialize
from twilio.base import serialize
from twilio.base import values
from twilio.base.instance_context import InstanceContext
from twilio.base.instance_resource import InstanceResource
from twilio.base.list_resource import ListResource
from twilio.base.version import Version

from twilio.base.page import Page

# 




class AssistantList(ListResource):
    def __init__(self, version: Version):
        # TODO: needs autogenerated docs
        super().__init__(version)

        # Path Solution
        self._solution = {  }
        self._uri = '/Assistants'
        
    

    def page(self, page_size):
        
        data = values.of({
            'page_size': page_size, 
        })

        response = self._version.page(method='get', uri=self._uri, data=data, )

        return AssistantPage(self._version, response, self.solution)

    def stream(self, page_size=values.unset, limit=None, pageSize=None):
        limits = self._version.read_limits(limit, page_size)

        page = self.page(page_size=values.unset, limit=None, page_size=None)

        return self._version.stream(page, limits['limit'])


    def list(self, page_size=values.unset, limit=None, pageSize=None):
        return list(self.stream(
            page_size=page_size,
            
            limit=limit,
            page_size=page_size
        ))

    def get_page(self, target_url):
        response = self._version.domain.twilio.request(
            'GET',
            target_url,
        )

        return AssistantPage(self._version, response, self._solution)
    
    

    

    

    # @properties

    def get(self, ):
        return AssistantContext(self._version,  )


    def __repr__(self):
        """
        Provide a friendly representation
        :returns: Machine friendly representation
        :rtype: str
        """
        return '<Twilio.Api.Understand.AssistantListInstance>'






