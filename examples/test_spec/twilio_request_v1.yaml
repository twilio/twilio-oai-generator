# This spec tests followings
# 1. All types of request body(urlencoded, json)
# 2. Tests pagination for both type of request body.

info:
  contact:
    email: support@twilio.com
    name: Twilio Support
    url: https://support.twilio.com
  description: This is the public Twilio REST API.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://www.twilio.com/legal/tos
  title: Twilio - REQUEST BODY TEST
  version: 1.11.0
openapi: 3.0.1

components: 
  schemas:
    UpdateRequestBodyRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
paths:
  /v1/requestbody:
    servers:
      - url: https://testparameter.twilio.com
    post:
      operationId: CreateRequestBody
      parameters:
        - name: queryParamStringRequired
          in: query
          description: A single enum value as a query parameter
          required: required
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              # 1. Inline request body
              type: object
              title: CreateRequestBodyRequest
              properties:
                username:
                  type: string
                password:
                  type: string
                  
      responses:
        '201':
          description: Parameter created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  status:
                    type: string

  /v1/requestbody/{id}:
    servers:
      - url: https://testparameter.twilio.com
    post:
      operationId: UpdateRequestBody
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: queryParamStringRequired
          in: query
          required: required
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              # 2. Reusable request body
              $ref: '#/components/schemas/UpdateRequestBodyRequest'

      responses:
        '201':
          description: Parameter created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  status:
                    type: string