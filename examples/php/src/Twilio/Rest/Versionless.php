<?php

/**
 * This code was generated by
 * \ / _    _  _|   _  _
 * | (_)\/(_)(_|\/| |(/_  v1.0.0
 * /       /
 */

namespace Twilio\Rest;

use Twilio\Domain;
use Twilio\Exceptions\TwilioException;
use Twilio\Rest\Versionless\Understand;
use Twilio\Rest\Versionless\DeployedDevices;

/**
 * @property \Twilio\Rest\Versionless\Understand $understand
 * @property \Twilio\Rest\Versionless\DeployedDevices $deployedDevices
 * @property \Twilio\Rest\Versionless\Understand\AssistantList $assistants
 * @property \Twilio\Rest\Versionless\DeployedDevices\FleetList $fleets
 */
class Versionless extends Domain {

    protected $_understand;
    protected $_deployedDevices;

    /**
     * Construct the Versionless Domain
     *
     * @param Client $client Client to communicate with Twilio
     */
    public function __construct(Client $client) {
        parent::__construct($client);

        $this->baseUrl = 'https://versionless.twilio.com';

    }

    /**
     * @return PreviewUnderstand Version understand of preview
     */
    protected function getUnderstand(): Understand {
        if (!$this->_understand) {
            $this->_understand = new Understand($this);
        }
        return $this->_understand;
    }

    /**
     * @return PreviewDeployedDevices Version deployedDevices of preview
     */
    protected function getDeployedDevices(): DeployedDevices {
        if (!$this->_deployedDevices) {
            $this->_deployedDevices = new DeployedDevices($this);
        }
        return $this->_deployedDevices;
    }

    /**
     * Magic getter to lazy load version
     *
     * @param string $name Version to return
     * @return \Twilio\Version The requested version
     * @throws TwilioException For unknown versions
     */
    public function __get(string $name) {
        $method = 'get' . \ucfirst($name);
        if (\method_exists($this, $method)) {
            return $this->$method();
        }

        throw new TwilioException('Unknown version ' . $name);
    }

    /**
     * Magic caller to get resource contexts
     *
     * @param string $name Resource to return
     * @param array $arguments Context parameters
     * @return \Twilio\InstanceContext The requested resource context
     * @throws TwilioException For unknown resource
     */
    public function __call(string $name, array $arguments) {
        $method = 'context' . \ucfirst($name);
        if (\method_exists($this, $method)) {
            return \call_user_func_array([$this, $method], $arguments);
        }

        throw new TwilioException('Unknown context ' . $name);
    }

    protected function getAssistants(): \Twilio\Rest\Versionless\Understand\AssistantList {
        return $this->assistants;
    }

    protected function getFleets(): \Twilio\Rest\Versionless\DeployedDevices\FleetList {
        return $this->fleets;
    }

    /**
     * Provide a friendly representation
     *
     * @return string Machine friendly representation
     */
    public function __toString(): string {
        return '[Twilio.Versionless]';
    }
}
