<?php

/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Accounts
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Twilio\Rest\Api\V2010;

use Twilio\Exceptions\TwilioException;
use Twilio\ListResource;
use Twilio\Options;
use Twilio\Stream;
use Twilio\Values;
use Twilio\Version;


class CallList extends ListResource {
    /**
     * Construct the CallList
     *
     * @param Version $version Version that contains the resource
     * @param string $accountSid
     * @param int $testInteger
     */
    public function __construct(Version $version, string $accountSid , int $testInteger ) {
        parent::__construct($version);
        $this->solution = ['account_sid' => $accountSid,   'test_integer' => $testInteger  ];
        $this->uri = '/Accounts/' . \rawurlencode($accountSid) . '/Calls.json';
    }
    
    /**
    * Create the CallInstance
    *
    * @param array|Options $options Optional Arguments
    * @return AccountInstance Created AccountInstance
    * @throws TwilioException When an HTTP error occurs.
    */
    public function create(string $required_string_property ,string $test_method , array $options = []): CallInstance {
        $options = new Values($options);

        $data = Values::of([
            'RequiredStringProperty' => $required_string_property,
            'TestMethod' => $test_method,
            'AccountSid' => $options['AccountSid'],
            'TestArrayOfStrings' => Serialize::map($options['TestArrayOfStrings'], function($e) { return $e; }),
            'TestArrayOfUri' => Serialize::map($options['TestArrayOfUri'], function($e) { return $e; }),
        ]);

        $payload = $this->version->create('POST', $this->uri, [], $data);

        return new CallInstance(
            $this->version,
            $payload,
            $this->solution['required_string_property'],
            $this->solution['test_method'],
        );
    }

    
    
    
    
    
    /**
     * Constructs a CallContext
     *
     * @param string $sid The unique string that identifies the resource
     */
    public function getContext(string $sid): CallContext {
        return new CallContext($this->version);
    }

    /**
     * Provide a friendly representation
     *
     * @return string Machine friendly representation
     */
    public function __toString(): string {
        return '[Twilio.Api.V2010.CallList]';
    }
}
