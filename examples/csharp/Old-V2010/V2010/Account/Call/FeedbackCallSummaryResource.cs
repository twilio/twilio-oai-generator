/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Accounts
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Clients;
using Twilio.Converters;
using Twilio.Exceptions;
using Twilio.Http;

using Twilio.Types;

using Twilio.Types;


namespace Twilio.Rest.Api.V2010.Account.Call
{
    public class FeedbackCallSummaryResource : Resource
    {
    
        public sealed class StatusEnum : StringEnum
        {
            private StatusEnum(string value) : base(value) {}
            public StatusEnum() {}
            public static implicit operator StatusEnum(string value)
            {
                return new StatusEnum(value);
            }
            public static readonly StatusEnum InProgress = new StatusEnum("in-progress");
            public static readonly StatusEnum Paused = new StatusEnum("paused");
            public static readonly StatusEnum Stopped = new StatusEnum("stopped");
            public static readonly StatusEnum Processing = new StatusEnum("processing");
            public static readonly StatusEnum Completed = new StatusEnum("completed");
            public static readonly StatusEnum Absent = new StatusEnum("absent");

        }

        
        private static Request BuildCreateRequest(CreateFeedbackCallSummaryOptions options, ITwilioRestClient client)
        {
            
            string path = "/2010-04-01/Accounts/{AccountSid}/Calls/FeedbackSummary.json";

            string PathAccountSid = options.PathAccountSid ?? client.AccountSid;
            path = path.Replace("{"+"AccountSid"+"}", PathAccountSid);


            return new Request(
                HttpMethod.Post,
                Rest.Domain.Api,
                path,
                postParams: options.GetParams(),
                headerParams: null
            );
        }

        public static FeedbackCallSummaryResource Create(CreateFeedbackCallSummaryOptions options, ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = client.Request(BuildCreateRequest(options, client));
            return FromJson(response.Content);
        }

        #if !NET35
        public static async System.Threading.Tasks.Task<FeedbackCallSummaryResource> CreateAsync(CreateFeedbackCallSummaryOptions options,
        ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = await client.RequestAsync(BuildCreateRequest(options, client));
            return FromJson(response.Content);
        }
        #endif


        public static FeedbackCallSummaryResource Create(
                                          DateTime? endDate,
                                          DateTime? startDate,
                                          string pathAccountSid = null,
                                          ITwilioRestClient client = null)
        {
            var options = new CreateFeedbackCallSummaryOptions(endDate, startDate){  PathAccountSid = pathAccountSid };
            return Create(options, client);
        }

        #if !NET35
        public static async System.Threading.Tasks.Task<FeedbackCallSummaryResource> CreateAsync(
                                                                                  DateTime? endDate,
                                                                                  DateTime? startDate,
                                                                                  string pathAccountSid = null,
                                                                                  ITwilioRestClient client = null)
        {
        var options = new CreateFeedbackCallSummaryOptions(endDate, startDate){  PathAccountSid = pathAccountSid };
            return await CreateAsync(options, client);
        }
        #endif








    
        public static Page<FeedbackCallSummaryResource> GetPage(string targetUrl, ITwilioRestClient client)
        {
            client = client ?? TwilioClient.GetRestClient();

            var request = new Request(
                HttpMethod.Get,
                targetUrl
            );

            var response = client.Request(request);
            return Page<FeedbackCallSummaryResource>.FromJson("", response.Content);
        }

        public static Page<FeedbackCallSummaryResource> NextPage(Page<FeedbackCallSummaryResource> page, ITwilioRestClient client)
        {
            var request = new Request(
                HttpMethod.Get,
                page.GetNextPageUrl(Rest.Domain.Api)
            );

            var response = client.Request(request);
            return Page<FeedbackCallSummaryResource>.FromJson("", response.Content);
        }

        public static Page<FeedbackCallSummaryResource> PreviousPage(Page<FeedbackCallSummaryResource> page, ITwilioRestClient client)
        {
            var request = new Request(
                HttpMethod.Get,
                page.GetPreviousPageUrl(Rest.Domain.Api)
            );

            var response = client.Request(request);
            return Page<FeedbackCallSummaryResource>.FromJson("", response.Content);
        }

        public static FeedbackCallSummaryResource FromJson(string json)
        {
            try
            {
                return JsonConvert.DeserializeObject<FeedbackCallSummaryResource>(json);
            }
            catch (JsonException e)
            {
                throw new ApiException(e.Message, e);
            }
        }


    
        [JsonProperty("account_sid")]
        public string AccountSid { get; private set; }

        [JsonProperty("sid")]
        public string Sid { get; private set; }

        [JsonProperty("test_string")]
        public string TestString { get; private set; }

        [JsonProperty("test_integer")]
        public int? TestInteger { get; private set; }

        [JsonProperty("test_object")]
        public PhoneNumberCapabilities TestObject { get; private set; }

        [JsonProperty("test_date_time")]
        public DateTime? TestDateTime { get; private set; }

        [JsonProperty("test_number")]
        public decimal? TestNumber { get; private set; }

        [JsonProperty("price_unit")]
        public string PriceUnit { get; private set; }

        [JsonProperty("test_number_float")]
        public float? TestNumberFloat { get; private set; }

        [JsonProperty("test_enum")]
        [JsonConverter(typeof(StringEnumConverter))]
        public FeedbackCallSummaryResource.StatusEnum TestEnum { get; private set; }

        [JsonProperty("test_array_of_integers")]
        public List<int?> TestArrayOfIntegers { get; private set; }

        [JsonProperty("test_array_of_array_of_integers")]
        public List<List<int?>> TestArrayOfArrayOfIntegers { get; private set; }

        [JsonProperty("test_array_of_objects")]
        public List<FeedbackIssue> TestArrayOfObjects { get; private set; }

        [JsonProperty("test_array_of_enum")]
        [JsonConverter(typeof(StringEnumConverter))]
        public List<FeedbackCallSummaryResource.StatusEnum> TestArrayOfEnum { get; private set; }



        private FeedbackCallSummaryResource() {

        }
    } // end of resource class
} // end of namespace

