/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Number Pool Service
 * This service is an entry point for all Number Pool CRUD requests.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.twilio.rest.messaging.v1;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

import com.twilio.exception.ApiException;
import com.twilio.exception.RestException;
import com.twilio.http.HttpMethod;
import com.twilio.http.Request;
import com.twilio.http.Response;
import com.twilio.http.TwilioRestClient;
import com.twilio.rest.Domains;

import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.ToString;

import java.io.IOException;
import java.io.InputStream;
import java.net.URI;
import java.time.ZonedDateTime;

import java.util.Map;
import java.util.List;
import java.time.LocalDate;
import java.math.BigDecimal;
import com.twilio.type.PhoneNumberCapabilities;
import com.twilio.type.FeedbackIssue;
import com.twilio.type.IceServer;
import com.twilio.type.InboundCallPrice;
import com.twilio.type.OutboundPrefixPriceWithOrigin;
import com.twilio.type.OutboundPrefixPrice;
import com.twilio.type.OutboundCallPriceWithOrigin;
import com.twilio.type.PhoneNumberPrice;
import com.twilio.type.InboundSmsPrice;
import com.twilio.type.OutboundSmsPrice;
import com.twilio.type.OutboundCallPrice;
import com.twilio.type.RecordingRule;
import com.twilio.type.SubscribeRule;

@AllArgsConstructor
public class UseCaseModel  {

        @ToString
        static public class UseCaseRequest {
            @JsonProperty("name")
            @Getter private String name;
            @JsonProperty("intent")
            @Getter private String intent;
            @JsonProperty("pipeline")
            @Getter private List<UseCaseRequestPipeline> pipeline;

            public static UseCaseRequest fromJson(String jsonString, ObjectMapper mapper) throws IOException {
                return mapper.readValue(jsonString, UseCaseRequest.class);
            }
        }

        @ToString
        static public class UseCaseRequestPipeline {
            @JsonProperty("type")
            @Getter private String type;
            @JsonProperty("geo_match")
            @Getter private Boolean geoMatch;
            @JsonProperty("sticky_sender")
            @Getter private Boolean stickySender;
            @JsonProperty("org_domain")
            @Getter private String orgDomain;
            @JsonProperty("enabled")
            @Getter private Boolean enabled;

            public static UseCaseRequestPipeline fromJson(String jsonString, ObjectMapper mapper) throws IOException {
                return mapper.readValue(jsonString, UseCaseRequestPipeline.class);
            }
        }

        @ToString
        static public class NumberSelection {
            @JsonProperty("type")
            @Getter private String type;
            @JsonProperty("geo_match")
            @Getter private Boolean geoMatch;
            @JsonProperty("sticky_sender")
            @Getter private Boolean stickySender;

            public static NumberSelection fromJson(String jsonString, ObjectMapper mapper) throws IOException {
                return mapper.readValue(jsonString, NumberSelection.class);
            }
        }

        @ToString
        static public class LinkShortener {
            @JsonProperty("type")
            @Getter private String type;
            @JsonProperty("org_domain")
            @Getter private String orgDomain;

            public static LinkShortener fromJson(String jsonString, ObjectMapper mapper) throws IOException {
                return mapper.readValue(jsonString, LinkShortener.class);
            }
        }

        @ToString
        static public class Scheduler {
            @JsonProperty("enabled")
            @Getter private Boolean enabled;

            public static Scheduler fromJson(String jsonString, ObjectMapper mapper) throws IOException {
                return mapper.readValue(jsonString, Scheduler.class);
            }
        }

}
