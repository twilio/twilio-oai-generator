##
#    This code was generated by
#    ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
#     |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
#     |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
#
#    Twilio - Iam
#    This is the public Twilio REST API.
#
#    NOTE: This class is auto generated by OpenAPI Generator.
#    https://openapi-generator.tech
#    Do not edit the class manually.
#

module Twilio
  module REST
    class Iam < IamBase
      class V1 < Version
        class ApiKeyList < ListResource
          ##
          # Initialize the ApiKeyList
          # @param [Version] version Version that contains the resource
          # @return [ApiKeyList] ApiKeyList
          def initialize(version)
            super(version)
            # Path Solution
            @solution = {}
          end

          # Provide a user friendly representation
          def to_s
            '#<Twilio.Iam.V1.ApiKeyList>'
          end
        end

        class ApiKeyContext < InstanceContext
          ##
          # Initialize the ApiKeyContext
          # @param [Version] version Version that contains the resource
          # @param [String] sid The Twilio-provided string that uniquely identifies the Key resource to update.
          # @return [ApiKeyContext] ApiKeyContext
          def initialize(version, sid)
            super(version)

            # Path Solution
            @solution = { sid: sid, }
            @uri = "/Keys/#{@solution[:sid]}"
          end

          ##
          # Delete the ApiKeyInstance
          # @return [Boolean] True if delete succeeds, false otherwise
          def delete
            headers = Twilio::Values.of({ 'Content-Type' => 'application/x-www-form-urlencoded', })

            @version.delete('DELETE', @uri, headers: headers)
          end

          ##
          # Fetch the ApiKeyInstance
          # @return [ApiKeyInstance] Fetched ApiKeyInstance
          def fetch
            headers = Twilio::Values.of({ 'Content-Type' => 'application/x-www-form-urlencoded', })

            payload = @version.fetch('GET', @uri, headers: headers)
            ApiKeyInstance.new(
              @version,
              payload,
              sid: @solution[:sid],
            )
          end

          ##
          # Update the ApiKeyInstance
          # @param [String] friendly_name A descriptive string that you create to describe the resource. It can be up to 64 characters long.
          # @param [Object] policy The \\\\`Policy\\\\` object is a collection that specifies the allowed Twilio permissions for the restricted key. For more information on the permissions available with restricted API keys, refer to the [Twilio documentation](https://www.twilio.com/docs/iam/api-keys/restricted-api-keys#permissions-available-with-restricted-api-keys).
          # @return [ApiKeyInstance] Updated ApiKeyInstance
          def update(
            friendly_name: :unset,
            policy: :unset
          )
            data = Twilio::Values.of({
                                       'FriendlyName' => friendly_name,
                                       'Policy' => Twilio.serialize_object(policy),
                                     })

            headers = Twilio::Values.of({ 'Content-Type' => 'application/x-www-form-urlencoded', })

            payload = @version.update('POST', @uri, data: data, headers: headers)
            ApiKeyInstance.new(
              @version,
              payload,
              sid: @solution[:sid],
            )
          end

          ##
          # Provide a user friendly representation
          def to_s
            context = @solution.map { |k, v| "#{k}: #{v}" }.join(',')
            "#<Twilio.Iam.V1.ApiKeyContext #{context}>"
          end

          ##
          # Provide a detailed, user friendly representation
          def inspect
            context = @solution.map { |k, v| "#{k}: #{v}" }.join(',')
            "#<Twilio.Iam.V1.ApiKeyContext #{context}>"
          end
        end

        class ApiKeyPage < Page
          ##
          # Initialize the ApiKeyPage
          # @param [Version] version Version that contains the resource
          # @param [Response] response Response from the API
          # @param [Hash] solution Path solution for the resource
          # @return [ApiKeyPage] ApiKeyPage
          def initialize(version, response, solution)
            super(version, response)

            # Path Solution
            @solution = solution
          end

          ##
          # Build an instance of ApiKeyInstance
          # @param [Hash] payload Payload response from the API
          # @return [ApiKeyInstance] ApiKeyInstance
          def get_instance(payload)
            ApiKeyInstance.new(@version, payload)
          end

          ##
          # Provide a user friendly representation
          def to_s
            '<Twilio.Iam.V1.ApiKeyPage>'
          end
        end

        class ApiKeyInstance < InstanceResource
          ##
          # Initialize the ApiKeyInstance
          # @param [Version] version Version that contains the resource
          # @param [Hash] payload payload that contains response from Twilio
          # @param [String] account_sid The SID of the
          #   {Account}[https://www.twilio.com/docs/iam/api/account] that created this ApiKey
          #   resource.
          # @param [String] sid The SID of the Call resource to fetch.
          # @return [ApiKeyInstance] ApiKeyInstance
          def initialize(version, payload, sid: nil)
            super(version)

            # Marshaled Properties
            @properties = {
              'sid' => payload['sid'],
              'friendly_name' => payload['friendly_name'],
              'date_created' => Twilio.deserialize_rfc2822(payload['date_created']),
              'date_updated' => Twilio.deserialize_rfc2822(payload['date_updated']),
              'policy' => payload['policy'],
            }

            # Context
            @instance_context = nil
            @params = { 'sid' => sid || @properties['sid'], }
          end

          ##
          # Generate an instance context for the instance, the context is capable of
          # performing various actions.  All instance actions are proxied to the context
          # @return [ApiKeyContext] CallContext for this CallInstance
          def context
            unless @instance_context
              @instance_context = ApiKeyContext.new(@version, @params['sid'])
            end
            @instance_context
          end

          ##
          # @return [String] The unique string that we created to identify the Key resource.
          def sid
            @properties['sid']
          end

          ##
          # @return [String] The string that you assigned to describe the resource.
          def friendly_name
            @properties['friendly_name']
          end

          ##
          # @return [Time] The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
          def date_created
            @properties['date_created']
          end

          ##
          # @return [Time] The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
          def date_updated
            @properties['date_updated']
          end

          ##
          # @return [Hash] The \\`Policy\\` object is a collection that specifies the allowed Twilio permissions for the restricted key. For more information on the permissions available with restricted API keys, refer to the [Twilio documentation](https://www.twilio.com/docs/iam/api-keys/restricted-api-keys#permissions-available-with-restricted-api-keys).
          def policy
            @properties['policy']
          end

          ##
          # Delete the ApiKeyInstance
          # @return [Boolean] True if delete succeeds, false otherwise
          def delete
            context.delete
          end

          ##
          # Fetch the ApiKeyInstance
          # @return [ApiKeyInstance] Fetched ApiKeyInstance
          def fetch
            context.fetch
          end

          ##
          # Update the ApiKeyInstance
          # @param [String] friendly_name A descriptive string that you create to describe the resource. It can be up to 64 characters long.
          # @param [Object] policy The \\\\`Policy\\\\` object is a collection that specifies the allowed Twilio permissions for the restricted key. For more information on the permissions available with restricted API keys, refer to the [Twilio documentation](https://www.twilio.com/docs/iam/api-keys/restricted-api-keys#permissions-available-with-restricted-api-keys).
          # @return [ApiKeyInstance] Updated ApiKeyInstance
          def update(
            friendly_name: :unset,
            policy: :unset
          )
            context.update(
              friendly_name: friendly_name,
              policy: policy,
            )
          end

          ##
          # Provide a user friendly representation
          def to_s
            values = @params.map { |k, v| "#{k}: #{v}" }.join(" ")
            "<Twilio.Iam.V1.ApiKeyInstance #{values}>"
          end

          ##
          # Provide a detailed, user friendly representation
          def inspect
            values = @properties.map { |k, v| "#{k}: #{v}" }.join(" ")
            "<Twilio.Iam.V1.ApiKeyInstance #{values}>"
          end
        end
      end
    end
  end
end
