=begin
#Twilio - Accounts

#This is the public Twilio REST API.

The version of the OpenAPI document: 1.11.0
Contact: support@twilio.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.1

=end

require 'cgi'

module OpenapiClient
  class TagThatShouldBeRemoved
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # This operation's summary has a special character
    # @param [Hash] opts the optional parameters
    # @option opts [Time] :date_created 
    # @option opts [Date] :date_test 
    # @option opts [Time] :date_created 
    # @option opts [Time] :date_created 
    # @option opts [Integer] :page_size 
    # @return [ListAccountResponse]
    def list_account(opts = {})
      data, _status_code, _headers = list_account_with_http_info(opts)
      data
    end

    # This operation&#39;s summary has a special character
    # @param [Hash] opts the optional parameters
    # @option opts [Time] :date_created 
    # @option opts [Date] :date_test 
    # @option opts [Time] :date_created 
    # @option opts [Time] :date_created 
    # @option opts [Integer] :page_size 
    # @return [Array<(ListAccountResponse, Integer, Hash)>] ListAccountResponse data, response status code and response headers
    def list_account_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TagThatShouldBeRemoved.list_account ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] > 1000
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling TagThatShouldBeRemoved.list_account, must be smaller than or equal to 1000.'
      end

      if @api_client.config.client_side_validation && !opts[:'page_size'].nil? && opts[:'page_size'] < 1
        fail ArgumentError, 'invalid value for "opts[:"page_size"]" when calling TagThatShouldBeRemoved.list_account, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = '/2010-04-01/Accounts.json'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'DateCreated'] = opts[:'date_created'] if !opts[:'date_created'].nil?
      query_params[:'Date.Test'] = opts[:'date_test'] if !opts[:'date_test'].nil?
      query_params[:'DateCreated<'] = opts[:'date_created'] if !opts[:'date_created'].nil?
      query_params[:'DateCreated>'] = opts[:'date_created'] if !opts[:'date_created'].nil?
      query_params[:'PageSize'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ListAccountResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['accountSid_authToken']

      new_options = opts.merge(
        :operation => :"TagThatShouldBeRemoved.list_account",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TagThatShouldBeRemoved#list_account\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
