##
#    This code was generated by
#    ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
#    |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
#    |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
#
#    Twilio - Accounts
#    This is the public Twilio REST API.
#
#    NOTE: This class is auto generated by OpenAPI Generator.
#    https://openapi-generator.tech
#    Do not edit the class manually.
#


module Twilio
    module REST
        class FlexApi < Domain
            class V1 < Version
             class CredentialContext < InstanceContext
             class AwsContext < InstanceContext
            
                     class HistoryList < ListResource
                    ##
                    # Initialize the HistoryList
                    # @param [Version] version Version that contains the resource
                    # @return [HistoryList] HistoryList
                    def initialize(version, sid)
                        super(version)
                        # Path Solution
                        @solution = { sid: sid, }
                        
                        
                    end
                
                    
                    ##

                    # Provide a user friendly representation
                    def to_s
                        '#<Twilio.FlexApi.V1.HistoryList>'
                    end
                end

                class HistoryContext < InstanceContext
                    ##
                    # Initialize the HistoryContext
                    # @param [Version] version Version that contains the resource
                    # @param [String] sid 
                    # @return [HistoryContext] HistoryContext
                    def initialize(version, sid)
                        super(version)

                        # Path Solution
                        @solution = { sid: sid,  }
                        @uri = "/Credentials/AWS/#{@solution[:sid]}/History"

                        # Dependents
                    end
                    ##
                    # Fetch the HistoryInstance
                    # @return [HistoryInstance]
                    Fetched HistoryInstance
                    def fetch(add_ons_data: :unset )

                        params = Twilio::Values.of({
                        ])
                        params.merge!(Twilio.prefixed_collapsible_map(addOnsData, 'AddOns'))
                        payload = @version.fetch('GET',@uri,params : params  )
                        HistoryInstance.new(@version, payload,  sid: @solution[:sid],)
                    end


                    ##
                    # Provide a user friendly representation
                    def to_s
                        context = @solution.map {|k, v| "#{k}: #{v}"}.join(',')
                        "#<Twilio.FlexApi.V1.HistoryContext #{context}>"
                    end

                    ##
                    # Provide a detailed, user friendly representation
                    def inspect
                        context = @solution.map {|k, v| "#{k}: #{v}"}.join(',')
                        "#<Twilio.FlexApi.V1.HistoryContext #{context}>"
                    end
                end

                class HistoryPage < Page
                    ##
                    # Initialize the HistoryPage
                    # @param [Version] version Version that contains the resource
                    # @param [Response] response Response from the API
                    # @param [Hash] solution Path solution for the resource
                    # @return [HistoryPage] HistoryPage
                    def initialize(version, response, solution)
                        super(version, response)

                        # Path Solution
                        @solution = solution
                    end

                    ##
                    # Build an instance of HistoryInstance
                    # @param [Hash] payload Payload response from the API
                    # @return [HistoryInstance] HistoryInstance
                    def get_instance(payload)
                        HistoryInstance.new(@version, payload, sid: @solution[:sid])
                    end

                    ##
                    # Provide a user friendly representation
                    def to_s
                        '<Twilio.FlexApi.V1.HistoryPage>'
                    end
                end
             end
             end
            end
        end
    end
end


