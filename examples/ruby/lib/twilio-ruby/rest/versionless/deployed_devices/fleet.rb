##
#    This code was generated by
#    ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
#    |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
#    |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
#
#    Twilio - Versionless
#    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
#
#    NOTE: This class is auto generated by OpenAPI Generator.
#    https://openapi-generator.tech
#    Do not edit the class manually.
#


module Twilio
    module REST
        class Versionless < Domain
            class DeployedDevices < Version
                class FleetList < ListResource
                    ##
                    # Initialize the FleetList
                    # @param [Version] version Version that contains the resource
                    # @return [FleetList] FleetList
                    def initialize(version)
                        super(version)
                        # Path Solution
                        @solution = {  }
                        @uri = "/Fleets"
                        
                    end
                
                    ##
                    # Create the FleetInstance
                    # @param [String] name 
                    # @return [FleetInstance] Created FleetInstance
                    def create(name: :unset
					)
                        data = Twilio::Values.of(
                            
                            'Name' => name,
                                                    })

                        payload = @version.create('POST', @uri, data: data)

                        FleetInstance.new(@version, payload, )
                    end
                    
                    
                    ##

                    # Provide a user friendly representation
                    def to_s
                        '#<Twilio.Versionless.DeployedDevices.FleetList>'
                    end
                end
            end
        end
    end
end
