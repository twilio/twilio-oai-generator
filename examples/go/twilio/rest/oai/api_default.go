/*
    * Twilio - Accounts
    *
    * This is the public Twilio REST API.
    *
    * API version: 1.11.0
    * Contact: support@twilio.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
	twilio "github.com/twilio/twilio-go/client"
	"net/url"
    "strings"
    "time"
)

type DefaultApiService struct {
	baseURL string
	client  twilio.BaseClient
}

func NewDefaultApiService(client twilio.BaseClient) *DefaultApiService {
	return &DefaultApiService {
		client: client,
		baseURL: "https://autopilot.twilio.com",
	}
}

// CreateAssistantParams Optional parameters for the method 'CreateAssistant'
type CreateAssistantParams struct {
	CallbackEvents *string `json:"CallbackEvents,omitempty"`
	CallbackUrl *string `json:"CallbackUrl,omitempty"`
	Defaults *map[string]interface{} `json:"Defaults,omitempty"`
	FriendlyName *string `json:"FriendlyName,omitempty"`
	LogQueries *bool `json:"LogQueries,omitempty"`
	StyleSheet *map[string]interface{} `json:"StyleSheet,omitempty"`
	UniqueName *string `json:"UniqueName,omitempty"`
}

/*
* CreateAssistant Method for CreateAssistant
* @param optional nil or *CreateAssistantParams - Optional Parameters:
* @param "CallbackEvents" (string) - Reserved.
* @param "CallbackUrl" (string) - Reserved.
* @param "Defaults" (map[string]interface{}) - A JSON object that defines the Assistant's [default tasks](https://www.twilio.com/docs/autopilot/api/assistant/defaults) for various scenarios, including initiation actions and fallback tasks.
* @param "FriendlyName" (string) - A descriptive string that you create to describe the new resource. It is not unique and can be up to 255 characters long.
* @param "LogQueries" (bool) - Whether queries should be logged and kept after training. Can be: `true` or `false` and defaults to `true`. If `true`, queries are stored for 30 days, and then deleted. If `false`, no queries are stored.
* @param "StyleSheet" (map[string]interface{}) - The JSON string that defines the Assistant's [style sheet](https://www.twilio.com/docs/autopilot/api/assistant/stylesheet)
* @param "UniqueName" (string) - An application-defined string that uniquely identifies the new resource. It can be used as an alternative to the `sid` in the URL path to address the resource. The first 64 characters must be unique.
* @return AutopilotV1Assistant
*/
func (c *DefaultApiService) CreateAssistant(params *CreateAssistantParams) (*AutopilotV1Assistant, error) {
    path := "/v1/Assistants"

    data := url.Values{}
    headers := make(map[string]interface{})

    if params != nil && params.CallbackEvents != nil {
    data.Set("CallbackEvents", *params.CallbackEvents) 
}
    if params != nil && params.CallbackUrl != nil {
    data.Set("CallbackUrl", *params.CallbackUrl) 
}
    if params != nil && params.Defaults != nil {
	v, err := json.Marshal(params.Defaults)

	if err != nil {
	    return nil, err
	}

	data.Set("Defaults", string(v))
}
    if params != nil && params.FriendlyName != nil {
    data.Set("FriendlyName", *params.FriendlyName) 
}
    if params != nil && params.LogQueries != nil {
    data.Set("LogQueries", fmt.Sprint(*params.LogQueries)) 
}
    if params != nil && params.StyleSheet != nil {
	v, err := json.Marshal(params.StyleSheet)

	if err != nil {
	    return nil, err
	}

	data.Set("StyleSheet", string(v))
}
    if params != nil && params.UniqueName != nil {
    data.Set("UniqueName", *params.UniqueName) 
}


    resp, err := c.client.Post(c.baseURL+path, data, headers)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &AutopilotV1Assistant{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}
// CreateCallFeedbackSummaryParams Optional parameters for the method 'CreateCallFeedbackSummary'
type CreateCallFeedbackSummaryParams struct {
	EndDate *string `json:"EndDate,omitempty"`
	IncludeSubaccounts *bool `json:"IncludeSubaccounts,omitempty"`
	StartDate *string `json:"StartDate,omitempty"`
	StatusCallback *string `json:"StatusCallback,omitempty"`
	StatusCallbackMethod *string `json:"StatusCallbackMethod,omitempty"`
}

/*
* CreateCallFeedbackSummary Method for CreateCallFeedbackSummary
* Create a FeedbackSummary resource for a call
* @param AccountSid The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
* @param optional nil or *CreateCallFeedbackSummaryParams - Optional Parameters:
* @param "EndDate" (string) - Only include feedback given on or before this date. Format is `YYYY-MM-DD` and specified in UTC.
* @param "IncludeSubaccounts" (bool) - Whether to also include Feedback resources from all subaccounts. `true` includes feedback from all subaccounts and `false`, the default, includes feedback from only the specified account.
* @param "StartDate" (string) - Only include feedback given on or after this date. Format is `YYYY-MM-DD` and specified in UTC.
* @param "StatusCallback" (string) - The URL that we will request when the feedback summary is complete.
* @param "StatusCallbackMethod" (string) - The HTTP method (`GET` or `POST`) we use to make the request to the `StatusCallback` URL.
* @return ApiV2010AccountCallCallFeedbackSummary
*/
func (c *DefaultApiService) CreateCallFeedbackSummary(AccountSid string, params *CreateCallFeedbackSummaryParams) (*ApiV2010AccountCallCallFeedbackSummary, error) {
    path := "/2010-04-01/Accounts/{AccountSid}/Calls/FeedbackSummary.json"
	path = strings.Replace(path, "{"+"AccountSid"+"}", AccountSid, -1)

    data := url.Values{}
    headers := make(map[string]interface{})

    if params != nil && params.EndDate != nil {
    data.Set("EndDate", fmt.Sprint(*params.EndDate)) 
}
    if params != nil && params.IncludeSubaccounts != nil {
    data.Set("IncludeSubaccounts", fmt.Sprint(*params.IncludeSubaccounts)) 
}
    if params != nil && params.StartDate != nil {
    data.Set("StartDate", fmt.Sprint(*params.StartDate)) 
}
    if params != nil && params.StatusCallback != nil {
    data.Set("StatusCallback", *params.StatusCallback) 
}
    if params != nil && params.StatusCallbackMethod != nil {
    data.Set("StatusCallbackMethod", *params.StatusCallbackMethod) 
}


    resp, err := c.client.Post(c.baseURL+path, data, headers)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &ApiV2010AccountCallCallFeedbackSummary{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}
// CreateCallRecordingParams Optional parameters for the method 'CreateCallRecording'
type CreateCallRecordingParams struct {
	XTwilioWebhookEnabled *string `json:"X-Twilio-Webhook-Enabled,omitempty"`
	RecordingChannels *string `json:"RecordingChannels,omitempty"`
	RecordingStatusCallback *string `json:"RecordingStatusCallback,omitempty"`
	RecordingStatusCallbackEvent *[]string `json:"RecordingStatusCallbackEvent,omitempty"`
	RecordingStatusCallbackMethod *string `json:"RecordingStatusCallbackMethod,omitempty"`
	RecordingTrack *string `json:"RecordingTrack,omitempty"`
	Trim *string `json:"Trim,omitempty"`
}

/*
* CreateCallRecording Method for CreateCallRecording
* Create a recording for the call
* @param AccountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
* @param CallSid The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) to associate the resource with.
* @param optional nil or *CreateCallRecordingParams - Optional Parameters:
* @param "XTwilioWebhookEnabled" (string) - The X-Twilio-Webhook-Enabled HTTP request header
* @param "RecordingChannels" (string) - The number of channels used in the recording. Can be: `mono` or `dual` and the default is `mono`. `mono` records all parties of the call into one channel. `dual` records each party of a 2-party call into separate channels.
* @param "RecordingStatusCallback" (string) - The URL we should call using the `recording_status_callback_method` on each recording event specified in  `recording_status_callback_event`. For more information, see [RecordingStatusCallback parameters](https://www.twilio.com/docs/voice/api/recording#recordingstatuscallback).
* @param "RecordingStatusCallbackEvent" ([]string) - The recording status events on which we should call the `recording_status_callback` URL. Can be: `in-progress`, `completed` and `absent` and the default is `completed`. Separate multiple event values with a space.
* @param "RecordingStatusCallbackMethod" (string) - The HTTP method we should use to call `recording_status_callback`. Can be: `GET` or `POST` and the default is `POST`.
* @param "RecordingTrack" (string) - The audio track to record for the call. Can be: `inbound`, `outbound` or `both`. The default is `both`. `inbound` records the audio that is received by Twilio. `outbound` records the audio that is generated from Twilio. `both` records the audio that is received and generated by Twilio.
* @param "Trim" (string) - Whether to trim any leading and trailing silence in the recording. Can be: `trim-silence` or `do-not-trim` and the default is `do-not-trim`. `trim-silence` trims the silence from the beginning and end of the recording and `do-not-trim` does not.
* @return ApiV2010AccountCallCallRecording
*/
func (c *DefaultApiService) CreateCallRecording(AccountSid string, CallSid string, params *CreateCallRecordingParams) (*ApiV2010AccountCallCallRecording, error) {
    path := "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Recordings.json"
	path = strings.Replace(path, "{"+"AccountSid"+"}", AccountSid, -1)
	path = strings.Replace(path, "{"+"CallSid"+"}", CallSid, -1)

    data := url.Values{}
    headers := make(map[string]interface{})

    if params != nil && params.RecordingChannels != nil {
    data.Set("RecordingChannels", *params.RecordingChannels) 
}
    if params != nil && params.RecordingStatusCallback != nil {
    data.Set("RecordingStatusCallback", *params.RecordingStatusCallback) 
}
    if params != nil && params.RecordingStatusCallbackEvent != nil {
    data.Set("RecordingStatusCallbackEvent",  strings.Join(*params.RecordingStatusCallbackEvent, ","))
}
    if params != nil && params.RecordingStatusCallbackMethod != nil {
    data.Set("RecordingStatusCallbackMethod", *params.RecordingStatusCallbackMethod) 
}
    if params != nil && params.RecordingTrack != nil {
    data.Set("RecordingTrack", *params.RecordingTrack) 
}
    if params != nil && params.Trim != nil {
    data.Set("Trim", *params.Trim) 
}

	if params != nil && params.XTwilioWebhookEnabled != nil {
		headers["XTwilioWebhookEnabled"] = *params.XTwilioWebhookEnabled
	}

    resp, err := c.client.Post(c.baseURL+path, data, headers)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &ApiV2010AccountCallCallRecording{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}
// CreateCredentialAwsParams Optional parameters for the method 'CreateCredentialAws'
type CreateCredentialAwsParams struct {
	AccountSid *string `json:"AccountSid,omitempty"`
	Credentials *string `json:"Credentials,omitempty"`
	FriendlyName *string `json:"FriendlyName,omitempty"`
}

/*
* CreateCredentialAws Method for CreateCredentialAws
* Create a new AWS Credential
* @param optional nil or *CreateCredentialAwsParams - Optional Parameters:
* @param "AccountSid" (string) - The SID of the Subaccount that this Credential should be associated with. Must be a valid Subaccount of the account issuing the request.
* @param "Credentials" (string) - A string that contains the AWS access credentials in the format `<AWS_ACCESS_KEY_ID>:<AWS_SECRET_ACCESS_KEY>`. For example, `AKIAIOSFODNN7EXAMPLE:wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY`
* @param "FriendlyName" (string) - A descriptive string that you create to describe the resource. It can be up to 64 characters long.
* @return AccountsV1CredentialCredentialAws
*/
func (c *DefaultApiService) CreateCredentialAws(params *CreateCredentialAwsParams) (*AccountsV1CredentialCredentialAws, error) {
    path := "/v1/Credentials/AWS"

    data := url.Values{}
    headers := make(map[string]interface{})

    if params != nil && params.AccountSid != nil {
    data.Set("AccountSid", *params.AccountSid) 
}
    if params != nil && params.Credentials != nil {
    data.Set("Credentials", *params.Credentials) 
}
    if params != nil && params.FriendlyName != nil {
    data.Set("FriendlyName", *params.FriendlyName) 
}


    resp, err := c.client.Post(c.baseURL+path, data, headers)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &AccountsV1CredentialCredentialAws{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}

/*
* DeleteArchivedCall Method for DeleteArchivedCall
* Delete an Archived Call record from your account. This removes the record from your Bulk Export results, but not from API or Account Portal logs.
* @param Date The date of the Call in UTC.
* @param Sid The Twilio-provided Call SID that uniquely identifies the Call resource to delete
*/
func (c *DefaultApiService) DeleteArchivedCall(Date string, Sid string, ) (error) {
    path := "/v1/Archives/{Date}/Calls/{Sid}"
	path = strings.Replace(path, "{"+"Date"+"}", fmt.Sprint(Date), -1)
	path = strings.Replace(path, "{"+"Sid"+"}", Sid, -1)

    data := url.Values{}
    headers := make(map[string]interface{})



    resp, err := c.client.Delete(c.baseURL+path, data, headers)
    if err != nil {
        return err
    }

    defer resp.Body.Close()

    return nil
}

/*
* DeleteCredentialAws Method for DeleteCredentialAws
* Delete a Credential from your account
* @param Sid The Twilio-provided string that uniquely identifies the AWS resource to delete.
*/
func (c *DefaultApiService) DeleteCredentialAws(Sid string, ) (error) {
    path := "/v1/Credentials/AWS/{Sid}"
	path = strings.Replace(path, "{"+"Sid"+"}", Sid, -1)

    data := url.Values{}
    headers := make(map[string]interface{})



    resp, err := c.client.Delete(c.baseURL+path, data, headers)
    if err != nil {
        return err
    }

    defer resp.Body.Close()

    return nil
}

/*
* DeleteIncomingPhoneNumber Method for DeleteIncomingPhoneNumber
* Delete a phone-numbers belonging to the account used to make the request.
* @param AccountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resources to delete.
* @param Sid The Twilio-provided string that uniquely identifies the IncomingPhoneNumber resource to delete.
*/
func (c *DefaultApiService) DeleteIncomingPhoneNumber(AccountSid string, Sid string, ) (error) {
    path := "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{Sid}.json"
	path = strings.Replace(path, "{"+"AccountSid"+"}", AccountSid, -1)
	path = strings.Replace(path, "{"+"Sid"+"}", Sid, -1)

    data := url.Values{}
    headers := make(map[string]interface{})



    resp, err := c.client.Delete(c.baseURL+path, data, headers)
    if err != nil {
        return err
    }

    defer resp.Body.Close()

    return nil
}

/*
* FetchCredentialAws Method for FetchCredentialAws
* Fetch the AWS credentials specified by the provided Credential Sid
* @param Sid The Twilio-provided string that uniquely identifies the AWS resource to fetch.
* @return AccountsV1CredentialCredentialAws
*/
func (c *DefaultApiService) FetchCredentialAws(Sid string, ) (*AccountsV1CredentialCredentialAws, error) {
    path := "/v1/Credentials/AWS/{Sid}"
	path = strings.Replace(path, "{"+"Sid"+"}", Sid, -1)

    data := url.Values{}
    headers := make(map[string]interface{})



    resp, err := c.client.Get(c.baseURL+path, data, headers)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &AccountsV1CredentialCredentialAws{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}

/*
* FetchIncomingPhoneNumber Method for FetchIncomingPhoneNumber
* Fetch an incoming-phone-number belonging to the account used to make the request.
* @param AccountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resource to fetch.
* @param Sid The Twilio-provided string that uniquely identifies the IncomingPhoneNumber resource to fetch.
* @return ApiV2010AccountIncomingPhoneNumber
*/
func (c *DefaultApiService) FetchIncomingPhoneNumber(AccountSid string, Sid string, ) (*ApiV2010AccountIncomingPhoneNumber, error) {
    path := "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{Sid}.json"
	path = strings.Replace(path, "{"+"AccountSid"+"}", AccountSid, -1)
	path = strings.Replace(path, "{"+"Sid"+"}", Sid, -1)

    data := url.Values{}
    headers := make(map[string]interface{})



    resp, err := c.client.Get(c.baseURL+path, data, headers)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &ApiV2010AccountIncomingPhoneNumber{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}
// ListAssistantParams Optional parameters for the method 'ListAssistant'
type ListAssistantParams struct {
	PageSize *int32 `json:"PageSize,omitempty"`
}

/*
* ListAssistant Method for ListAssistant
* @param optional nil or *ListAssistantParams - Optional Parameters:
* @param "PageSize" (int32) - How many resources to return in each list page. The default is 50, and the maximum is 1000.
* @return ListAssistantResponse
*/
func (c *DefaultApiService) ListAssistant(params *ListAssistantParams) (*ListAssistantResponse, error) {
    path := "/v1/Assistants"

    data := url.Values{}
    headers := make(map[string]interface{})

    if params != nil && params.PageSize != nil {
    data.Set("PageSize", fmt.Sprint(*params.PageSize)) 
}


    resp, err := c.client.Get(c.baseURL+path, data, headers)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &ListAssistantResponse{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}
// ListCallRecordingParams Optional parameters for the method 'ListCallRecording'
type ListCallRecordingParams struct {
	DateCreated *time.Time `json:"DateCreated,omitempty"`
	DateTest *string `json:"DateTest,omitempty"`
	DateCreatedBefore *time.Time `json:"DateCreated&lt;,omitempty"`
	DateCreatedAfter *time.Time `json:"DateCreated&gt;,omitempty"`
	PageSize *int32 `json:"PageSize,omitempty"`
}

/*
* ListCallRecording Method for ListCallRecording
* Retrieve a list of recordings belonging to the call used to make the request
* @param AccountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resources to read.
* @param CallSid The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the resources to read.
* @param optional nil or *ListCallRecordingParams - Optional Parameters:
* @param "DateCreated" (time.Time) - The `date_created` value, specified as `YYYY-MM-DD`, of the resources to read. You can also specify inequality: `DateCreated<=YYYY-MM-DD` will return recordings generated at or before midnight on a given date, and `DateCreated>=YYYY-MM-DD` returns recordings generated at or after midnight on a date.
* @param "DateTest" (string) - The `date_test` value, specified as `YYYY-MM-DD`, of the resources to read.
* @param "DateCreatedBefore" (time.Time) - The `date_created` value, specified as `YYYY-MM-DD`, of the resources to read. You can also specify inequality: `DateCreated<=YYYY-MM-DD` will return recordings generated at or before midnight on a given date, and `DateCreated>=YYYY-MM-DD` returns recordings generated at or after midnight on a date.
* @param "DateCreatedAfter" (time.Time) - The `date_created` value, specified as `YYYY-MM-DD`, of the resources to read. You can also specify inequality: `DateCreated<=YYYY-MM-DD` will return recordings generated at or before midnight on a given date, and `DateCreated>=YYYY-MM-DD` returns recordings generated at or after midnight on a date.
* @param "PageSize" (int32) - How many resources to return in each list page. The default is 50, and the maximum is 1000.
* @return ListCallRecordingResponse
*/
func (c *DefaultApiService) ListCallRecording(AccountSid string, CallSid string, params *ListCallRecordingParams) (*ListCallRecordingResponse, error) {
    path := "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Recordings.json"
	path = strings.Replace(path, "{"+"AccountSid"+"}", AccountSid, -1)
	path = strings.Replace(path, "{"+"CallSid"+"}", CallSid, -1)

    data := url.Values{}
    headers := make(map[string]interface{})

    if params != nil && params.DateCreated != nil {
    data.Set("DateCreated", fmt.Sprint((*params.DateCreated).Format(time.RFC3339))) 
}
    if params != nil && params.DateTest != nil {
    data.Set("DateTest", fmt.Sprint(*params.DateTest)) 
}
    if params != nil && params.DateCreatedBefore != nil {
    data.Set("DateCreatedBefore", fmt.Sprint((*params.DateCreatedBefore).Format(time.RFC3339))) 
}
    if params != nil && params.DateCreatedAfter != nil {
    data.Set("DateCreatedAfter", fmt.Sprint((*params.DateCreatedAfter).Format(time.RFC3339))) 
}
    if params != nil && params.PageSize != nil {
    data.Set("PageSize", fmt.Sprint(*params.PageSize)) 
}


    resp, err := c.client.Get(c.baseURL+path, data, headers)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &ListCallRecordingResponse{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}
// ListCredentialAwsParams Optional parameters for the method 'ListCredentialAws'
type ListCredentialAwsParams struct {
	PageSize *int32 `json:"PageSize,omitempty"`
}

/*
* ListCredentialAws Method for ListCredentialAws
* Retrieves a collection of AWS Credentials belonging to the account used to make the request
* @param optional nil or *ListCredentialAwsParams - Optional Parameters:
* @param "PageSize" (int32) - How many resources to return in each list page. The default is 50, and the maximum is 1000.
* @return ListCredentialAwsResponse
*/
func (c *DefaultApiService) ListCredentialAws(params *ListCredentialAwsParams) (*ListCredentialAwsResponse, error) {
    path := "/v1/Credentials/AWS"

    data := url.Values{}
    headers := make(map[string]interface{})

    if params != nil && params.PageSize != nil {
    data.Set("PageSize", fmt.Sprint(*params.PageSize)) 
}


    resp, err := c.client.Get(c.baseURL+path, data, headers)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &ListCredentialAwsResponse{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}
// UpdateCredentialAwsParams Optional parameters for the method 'UpdateCredentialAws'
type UpdateCredentialAwsParams struct {
	FriendlyName *string `json:"FriendlyName,omitempty"`
}

/*
* UpdateCredentialAws Method for UpdateCredentialAws
* Modify the properties of a given Account
* @param Sid The Twilio-provided string that uniquely identifies the AWS resource to update.
* @param optional nil or *UpdateCredentialAwsParams - Optional Parameters:
* @param "FriendlyName" (string) - A descriptive string that you create to describe the resource. It can be up to 64 characters long.
* @return AccountsV1CredentialCredentialAws
*/
func (c *DefaultApiService) UpdateCredentialAws(Sid string, params *UpdateCredentialAwsParams) (*AccountsV1CredentialCredentialAws, error) {
    path := "/v1/Credentials/AWS/{Sid}"
	path = strings.Replace(path, "{"+"Sid"+"}", Sid, -1)

    data := url.Values{}
    headers := make(map[string]interface{})

    if params != nil && params.FriendlyName != nil {
    data.Set("FriendlyName", *params.FriendlyName) 
}


    resp, err := c.client.Post(c.baseURL+path, data, headers)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &AccountsV1CredentialCredentialAws{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}
// UpdateIncomingPhoneNumberParams Optional parameters for the method 'UpdateIncomingPhoneNumber'
type UpdateIncomingPhoneNumberParams struct {
	AccountSid2 *string `json:"AccountSid,omitempty"`
	AddressSid *string `json:"AddressSid,omitempty"`
	ApiVersion *string `json:"ApiVersion,omitempty"`
	BundleSid *string `json:"BundleSid,omitempty"`
	EmergencyAddressSid *string `json:"EmergencyAddressSid,omitempty"`
	EmergencyStatus *string `json:"EmergencyStatus,omitempty"`
	FriendlyName *string `json:"FriendlyName,omitempty"`
	IdentitySid *string `json:"IdentitySid,omitempty"`
	SmsApplicationSid *string `json:"SmsApplicationSid,omitempty"`
	SmsFallbackMethod *string `json:"SmsFallbackMethod,omitempty"`
	SmsFallbackUrl *string `json:"SmsFallbackUrl,omitempty"`
	SmsMethod *string `json:"SmsMethod,omitempty"`
	SmsUrl *string `json:"SmsUrl,omitempty"`
	StatusCallback *string `json:"StatusCallback,omitempty"`
	StatusCallbackMethod *string `json:"StatusCallbackMethod,omitempty"`
	TrunkSid *string `json:"TrunkSid,omitempty"`
	VoiceApplicationSid *string `json:"VoiceApplicationSid,omitempty"`
	VoiceCallerIdLookup *bool `json:"VoiceCallerIdLookup,omitempty"`
	VoiceFallbackMethod *string `json:"VoiceFallbackMethod,omitempty"`
	VoiceFallbackUrl *string `json:"VoiceFallbackUrl,omitempty"`
	VoiceMethod *string `json:"VoiceMethod,omitempty"`
	VoiceReceiveMode *string `json:"VoiceReceiveMode,omitempty"`
	VoiceUrl *string `json:"VoiceUrl,omitempty"`
}

/*
* UpdateIncomingPhoneNumber Method for UpdateIncomingPhoneNumber
* Update an incoming-phone-number instance.
* @param AccountSid The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resource to update.  For more information, see [Exchanging Numbers Between Subaccounts](https://www.twilio.com/docs/iam/api/subaccounts#exchanging-numbers).
* @param Sid The Twilio-provided string that uniquely identifies the IncomingPhoneNumber resource to update.
* @param optional nil or *UpdateIncomingPhoneNumberParams - Optional Parameters:
* @param "AccountSid2" (string) - The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resource to update.  For more information, see [Exchanging Numbers Between Subaccounts](https://www.twilio.com/docs/iam/api/subaccounts#exchanging-numbers).
* @param "AddressSid" (string) - The SID of the Address resource we should associate with the phone number. Some regions require addresses to meet local regulations.
* @param "ApiVersion" (string) - The API version to use for incoming calls made to the phone number. The default is `2010-04-01`.
* @param "BundleSid" (string) - The SID of the Bundle resource that you associate with the phone number. Some regions require a Bundle to meet local Regulations.
* @param "EmergencyAddressSid" (string) - The SID of the emergency address configuration to use for emergency calling from this phone number.
* @param "EmergencyStatus" (string) - The configuration status parameter that determines whether the phone number is enabled for emergency calling.
* @param "FriendlyName" (string) - A descriptive string that you created to describe this phone number. It can be up to 64 characters long. By default, this is a formatted version of the phone number.
* @param "IdentitySid" (string) - The SID of the Identity resource that we should associate with the phone number. Some regions require an identity to meet local regulations.
* @param "SmsApplicationSid" (string) - The SID of the application that should handle SMS messages sent to the number. If an `sms_application_sid` is present, we ignore all of the `sms_*_url` urls and use those set on the application.
* @param "SmsFallbackMethod" (string) - The HTTP method that we should use to call `sms_fallback_url`. Can be: `GET` or `POST` and defaults to `POST`.
* @param "SmsFallbackUrl" (string) - The URL that we should call when an error occurs while requesting or executing the TwiML defined by `sms_url`.
* @param "SmsMethod" (string) - The HTTP method that we should use to call `sms_url`. Can be: `GET` or `POST` and defaults to `POST`.
* @param "SmsUrl" (string) - The URL we should call when the phone number receives an incoming SMS message.
* @param "StatusCallback" (string) - The URL we should call using the `status_callback_method` to send status information to your application.
* @param "StatusCallbackMethod" (string) - The HTTP method we should use to call `status_callback`. Can be: `GET` or `POST` and defaults to `POST`.
* @param "TrunkSid" (string) - The SID of the Trunk we should use to handle phone calls to the phone number. If a `trunk_sid` is present, we ignore all of the voice urls and voice applications and use only those set on the Trunk. Setting a `trunk_sid` will automatically delete your `voice_application_sid` and vice versa.
* @param "VoiceApplicationSid" (string) - The SID of the application we should use to handle phone calls to the phone number. If a `voice_application_sid` is present, we ignore all of the voice urls and use only those set on the application. Setting a `voice_application_sid` will automatically delete your `trunk_sid` and vice versa.
* @param "VoiceCallerIdLookup" (bool) - Whether to lookup the caller's name from the CNAM database and post it to your app. Can be: `true` or `false` and defaults to `false`.
* @param "VoiceFallbackMethod" (string) - The HTTP method that we should use to call `voice_fallback_url`. Can be: `GET` or `POST` and defaults to `POST`.
* @param "VoiceFallbackUrl" (string) - The URL that we should call when an error occurs retrieving or executing the TwiML requested by `url`.
* @param "VoiceMethod" (string) - The HTTP method that we should use to call `voice_url`. Can be: `GET` or `POST` and defaults to `POST`.
* @param "VoiceReceiveMode" (string) - The configuration parameter for the phone number to receive incoming voice calls or faxes. Can be: `fax` or `voice` and defaults to `voice`.
* @param "VoiceUrl" (string) - The URL that we should call to answer a call to the phone number. The `voice_url` will not be called if a `voice_application_sid` or a `trunk_sid` is set.
* @return ApiV2010AccountIncomingPhoneNumber
*/
func (c *DefaultApiService) UpdateIncomingPhoneNumber(AccountSid string, Sid string, params *UpdateIncomingPhoneNumberParams) (*ApiV2010AccountIncomingPhoneNumber, error) {
    path := "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{Sid}.json"
	path = strings.Replace(path, "{"+"AccountSid"+"}", AccountSid, -1)
	path = strings.Replace(path, "{"+"Sid"+"}", Sid, -1)

    data := url.Values{}
    headers := make(map[string]interface{})

    if params != nil && params.AccountSid2 != nil {
    data.Set("AccountSid2", *params.AccountSid2) 
}
    if params != nil && params.AddressSid != nil {
    data.Set("AddressSid", *params.AddressSid) 
}
    if params != nil && params.ApiVersion != nil {
    data.Set("ApiVersion", *params.ApiVersion) 
}
    if params != nil && params.BundleSid != nil {
    data.Set("BundleSid", *params.BundleSid) 
}
    if params != nil && params.EmergencyAddressSid != nil {
    data.Set("EmergencyAddressSid", *params.EmergencyAddressSid) 
}
    if params != nil && params.EmergencyStatus != nil {
    data.Set("EmergencyStatus", *params.EmergencyStatus) 
}
    if params != nil && params.FriendlyName != nil {
    data.Set("FriendlyName", *params.FriendlyName) 
}
    if params != nil && params.IdentitySid != nil {
    data.Set("IdentitySid", *params.IdentitySid) 
}
    if params != nil && params.SmsApplicationSid != nil {
    data.Set("SmsApplicationSid", *params.SmsApplicationSid) 
}
    if params != nil && params.SmsFallbackMethod != nil {
    data.Set("SmsFallbackMethod", *params.SmsFallbackMethod) 
}
    if params != nil && params.SmsFallbackUrl != nil {
    data.Set("SmsFallbackUrl", *params.SmsFallbackUrl) 
}
    if params != nil && params.SmsMethod != nil {
    data.Set("SmsMethod", *params.SmsMethod) 
}
    if params != nil && params.SmsUrl != nil {
    data.Set("SmsUrl", *params.SmsUrl) 
}
    if params != nil && params.StatusCallback != nil {
    data.Set("StatusCallback", *params.StatusCallback) 
}
    if params != nil && params.StatusCallbackMethod != nil {
    data.Set("StatusCallbackMethod", *params.StatusCallbackMethod) 
}
    if params != nil && params.TrunkSid != nil {
    data.Set("TrunkSid", *params.TrunkSid) 
}
    if params != nil && params.VoiceApplicationSid != nil {
    data.Set("VoiceApplicationSid", *params.VoiceApplicationSid) 
}
    if params != nil && params.VoiceCallerIdLookup != nil {
    data.Set("VoiceCallerIdLookup", fmt.Sprint(*params.VoiceCallerIdLookup)) 
}
    if params != nil && params.VoiceFallbackMethod != nil {
    data.Set("VoiceFallbackMethod", *params.VoiceFallbackMethod) 
}
    if params != nil && params.VoiceFallbackUrl != nil {
    data.Set("VoiceFallbackUrl", *params.VoiceFallbackUrl) 
}
    if params != nil && params.VoiceMethod != nil {
    data.Set("VoiceMethod", *params.VoiceMethod) 
}
    if params != nil && params.VoiceReceiveMode != nil {
    data.Set("VoiceReceiveMode", *params.VoiceReceiveMode) 
}
    if params != nil && params.VoiceUrl != nil {
    data.Set("VoiceUrl", *params.VoiceUrl) 
}


    resp, err := c.client.Post(c.baseURL+path, data, headers)
    if err != nil {
        return nil, err
    }

    defer resp.Body.Close()

    ps := &ApiV2010AccountIncomingPhoneNumber{}
    if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
        return nil, err
    }

    return ps, err
}
